{"ast":null,"code":"import defaultTheme from \"@chakra-ui/theme\";\nimport { isFunction, mergeWith } from \"@chakra-ui/utils\";\n/**\n * Function to override or customize the Chakra UI theme conveniently\n * @param overrides - Your custom theme object overrides\n * @param baseTheme - theme to customize\n */\n\nexport function extendTheme(overrides, baseTheme) {\n  if (baseTheme === void 0) {\n    baseTheme = defaultTheme;\n  }\n\n  function customizer(source, override, key, object) {\n    if ((isFunction(source) || isFunction(override)) && Object.prototype.hasOwnProperty.call(object, key)) {\n      return function () {\n        var sourceValue = isFunction(source) ? source(...arguments) : source;\n        var overrideValue = isFunction(override) ? override(...arguments) : override;\n        return mergeWith({}, sourceValue, overrideValue, customizer);\n      };\n    } // fallback to default behaviour\n\n\n    return undefined;\n  }\n\n  return mergeWith({}, baseTheme, overrides, customizer);\n}","map":{"version":3,"mappings":"AAAA,OAAOA,YAAP,MAAiD,kBAAjD;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AAyBA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAILC,SAJK,EAKLC,SALK,EAMkB;EAAA,IADvBA,SACuB;IADvBA,SACuB,GADCL,YAAxBK;EACuB;;EACvB,SAASC,UAAT,CACEC,MADF,EAEEC,QAFF,EAGEC,GAHF,EAIEC,MAJF,EAKE;IACA,IACE,CAACT,UAAU,CAACM,MAAD,CAAVN,IAAsBA,UAAU,CAACO,QAAD,CAAjC,KACAG,MAAM,CAACC,SAAPD,CAAiBE,cAAjBF,CAAgCG,IAAhCH,CAAqCD,MAArCC,EAA6CF,GAA7CE,CAFF,EAGE;MACA,OAAO,YAAwB;QAC7B,IAAMI,WAAW,GAAGd,UAAU,CAACM,MAAD,CAAVN,GAAqBM,MAAM,CAAC,YAAD,CAA3BN,GAAuCM,MAA3D;QAEA,IAAMS,aAAa,GAAGf,UAAU,CAACO,QAAD,CAAVP,GAClBO,QAAQ,CAAC,YAAD,CADUP,GAElBO,QAFJ;QAIA,OAAON,SAAS,CAAC,EAAD,EAAKa,WAAL,EAAkBC,aAAlB,EAAiCV,UAAjC,CAAhB;MAPF;IALF,EAgBA;;;IACA,OAAOW,SAAP;EACD;;EAED,OAAOf,SAAS,CAAC,EAAD,EAAKG,SAAL,EAAgBD,SAAhB,EAA2BE,UAA3B,CAAhB;AACD","names":["defaultTheme","isFunction","mergeWith","extendTheme","overrides","baseTheme","customizer","source","override","key","object","Object","prototype","hasOwnProperty","call","sourceValue","overrideValue","undefined"],"sources":["../../src/extend-theme.ts"],"sourcesContent":["import defaultTheme, { ChakraTheme, Theme } from \"@chakra-ui/theme\"\nimport { isFunction, mergeWith } from \"@chakra-ui/utils\"\n\ntype CloneKey<Target, Key> = Key extends keyof Target ? Target[Key] : unknown\n\n/**\n * Represents a loose but specific type for the theme override.\n * It provides autocomplete hints for extending the theme, but leaves room\n * for adding properties.\n */\ntype DeepThemeExtension<BaseTheme, ThemeType> = {\n  [Key in keyof BaseTheme]?: BaseTheme[Key] extends (...args: any[]) => any\n    ? DeepThemeExtension<\n        Partial<ReturnType<BaseTheme[Key]>>,\n        CloneKey<ThemeType, Key>\n      >\n    : BaseTheme[Key] extends Array<any>\n    ? CloneKey<ThemeType, Key>\n    : BaseTheme[Key] extends object\n    ? DeepThemeExtension<Partial<BaseTheme[Key]>, CloneKey<ThemeType, Key>>\n    : CloneKey<ThemeType, Key>\n}\n\nexport type ThemeOverride = Partial<ChakraTheme> &\n  DeepThemeExtension<Theme, ChakraTheme>\n\n/**\n * Function to override or customize the Chakra UI theme conveniently\n * @param overrides - Your custom theme object overrides\n * @param baseTheme - theme to customize\n */\nexport function extendTheme<\n  BaseTheme extends ChakraTheme = Theme,\n  Overrides extends ThemeOverride = ThemeOverride\n>(\n  overrides: Overrides,\n  baseTheme: BaseTheme = (defaultTheme as unknown) as BaseTheme,\n): BaseTheme & Overrides {\n  function customizer(\n    source: unknown,\n    override: unknown,\n    key: string,\n    object: any,\n  ) {\n    if (\n      (isFunction(source) || isFunction(override)) &&\n      Object.prototype.hasOwnProperty.call(object, key)\n    ) {\n      return (...args: unknown[]) => {\n        const sourceValue = isFunction(source) ? source(...args) : source\n\n        const overrideValue = isFunction(override)\n          ? override(...args)\n          : override\n\n        return mergeWith({}, sourceValue, overrideValue, customizer)\n      }\n    }\n\n    // fallback to default behaviour\n    return undefined\n  }\n\n  return mergeWith({}, baseTheme, overrides, customizer)\n}\n"]},"metadata":{},"sourceType":"module"}