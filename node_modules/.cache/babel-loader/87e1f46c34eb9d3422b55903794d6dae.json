{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { Icon } from \"@chakra-ui/icon\";\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * The tag component is used to label or categorize UI elements.\n * To style the tag globally, change the styles in `theme.components.Tag`\n * @see Docs https://chakra-ui.com/docs/data-display/tag\n */\n\nexport var Tag = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useMultiStyleConfig(\"Tag\", props);\n  var ownProps = omitThemingProps(props);\n\n  var containerStyles = _extends({\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\"\n  }, styles.container);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref\n  }, ownProps, {\n    __css: containerStyles\n  })));\n});\n\nif (__DEV__) {\n  Tag.displayName = \"Tag\";\n}\n\nexport var TagLabel = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    isTruncated: true\n  }, props, {\n    __css: styles.label\n  }));\n});\n\nif (__DEV__) {\n  TagLabel.displayName = \"TagLabel\";\n}\n\nexport var TagLeftIcon = /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(Icon, _extends({\n  ref: ref,\n  verticalAlign: \"top\",\n  marginEnd: \"0.5rem\"\n}, props)));\n\nif (__DEV__) {\n  TagLeftIcon.displayName = \"TagLeftIcon\";\n}\n\nexport var TagRightIcon = /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(Icon, _extends({\n  ref: ref,\n  verticalAlign: \"top\",\n  marginStart: \"0.5rem\"\n}, props)));\n\nif (__DEV__) {\n  TagRightIcon.displayName = \"TagRightIcon\";\n}\n\nvar TagCloseIcon = props => /*#__PURE__*/React.createElement(Icon, _extends({\n  verticalAlign: \"inherit\",\n  viewBox: \"0 0 512 512\"\n}, props), /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n}));\n\nif (__DEV__) {\n  TagCloseIcon.displayName = \"TagCloseIcon\";\n}\n/**\n * TagCloseButton is used to close \"remove\" the tag\n * @see Docs https://chakra-ui.com/docs/components/tag\n */\n\n\nexport var TagCloseButton = props => {\n  var {\n    isDisabled,\n    children\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"isDisabled\", \"children\"]);\n\n  var styles = useStyles();\n\n  var btnStyles = _extends({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\",\n    transition: \"all 0.2s\"\n  }, styles.closeButton);\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({}, rest, {\n    type: \"button\",\n    \"aria-label\": \"close\",\n    disabled: isDisabled,\n    __css: btnStyles\n  }), children || /*#__PURE__*/React.createElement(TagCloseIcon, null));\n};\n\nif (__DEV__) {\n  TagCloseButton.displayName = \"TagCloseButton\";\n}","map":{"version":3,"mappings":"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","names":["Icon","chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","__DEV__","React","Tag","props","ref","styles","ownProps","containerStyles","display","verticalAlign","alignItems","maxWidth","container","value","span","__css","displayName","TagLabel","isTruncated","label","TagLeftIcon","marginEnd","TagRightIcon","marginStart","TagCloseIcon","viewBox","fill","d","TagCloseButton","isDisabled","children","rest","btnStyles","justifyContent","outline","transition","closeButton","button","type","disabled"],"sources":["../../src/tag.tsx"],"sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface TagProps\n  extends HTMLChakraProps<\"span\">,\n    ThemingProps<\"Tag\"> {}\n\n/**\n * The tag component is used to label or categorize UI elements.\n * To style the tag globally, change the styles in `theme.components.Tag`\n * @see Docs https://chakra-ui.com/docs/data-display/tag\n */\nexport const Tag = forwardRef<TagProps, \"span\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props)\n  const ownProps = omitThemingProps(props)\n\n  const containerStyles: SystemStyleObject = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container,\n  }\n\n  return (\n    <StylesProvider value={styles}>\n      <chakra.span ref={ref} {...ownProps} __css={containerStyles} />\n    </StylesProvider>\n  )\n})\n\nif (__DEV__) {\n  Tag.displayName = \"Tag\"\n}\n\nexport interface TagLabelProps extends HTMLChakraProps<\"span\"> {}\n\nexport const TagLabel = forwardRef<TagLabelProps, \"span\">((props, ref) => {\n  const styles = useStyles()\n  return <chakra.span ref={ref} isTruncated {...props} __css={styles.label} />\n})\n\nif (__DEV__) {\n  TagLabel.displayName = \"TagLabel\"\n}\n\nexport const TagLeftIcon = forwardRef<IconProps, \"svg\">((props, ref) => (\n  <Icon ref={ref} verticalAlign=\"top\" marginEnd=\"0.5rem\" {...props} />\n))\n\nif (__DEV__) {\n  TagLeftIcon.displayName = \"TagLeftIcon\"\n}\n\nexport const TagRightIcon = forwardRef<IconProps, \"svg\">((props, ref) => (\n  <Icon ref={ref} verticalAlign=\"top\" marginStart=\"0.5rem\" {...props} />\n))\n\nif (__DEV__) {\n  TagRightIcon.displayName = \"TagRightIcon\"\n}\n\nconst TagCloseIcon: React.FC<IconProps> = (props) => (\n  <Icon verticalAlign=\"inherit\" viewBox=\"0 0 512 512\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n    />\n  </Icon>\n)\n\nif (__DEV__) {\n  TagCloseIcon.displayName = \"TagCloseIcon\"\n}\n\nexport interface TagCloseButtonProps\n  extends Omit<HTMLChakraProps<\"button\">, \"disabled\"> {\n  isDisabled?: boolean\n}\n\n/**\n * TagCloseButton is used to close \"remove\" the tag\n * @see Docs https://chakra-ui.com/docs/components/tag\n */\nexport const TagCloseButton: React.FC<TagCloseButtonProps> = (props) => {\n  const { isDisabled, children, ...rest } = props\n\n  const styles = useStyles()\n\n  const btnStyles: SystemStyleObject = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\",\n    transition: \"all 0.2s\",\n    ...styles.closeButton,\n  }\n\n  return (\n    <chakra.button\n      {...rest}\n      type=\"button\"\n      aria-label=\"close\"\n      disabled={isDisabled}\n      __css={btnStyles}\n    >\n      {children || <TagCloseIcon />}\n    </chakra.button>\n  )\n}\n\nif (__DEV__) {\n  TagCloseButton.displayName = \"TagCloseButton\"\n}\n"]},"metadata":{},"sourceType":"module"}