{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar base83_1 = require(\"./base83\");\n\nvar utils_1 = require(\"./utils\");\n\nvar error_1 = require(\"./error\");\n/**\n * Returns an error message if invalid or undefined if valid\n * @param blurhash\n */\n\n\nvar validateBlurhash = function (blurhash) {\n  if (!blurhash || blurhash.length < 6) {\n    throw new error_1.ValidationError(\"The blurhash string must be at least 6 characters\");\n  }\n\n  var sizeFlag = base83_1.decode83(blurhash[0]);\n  var numY = Math.floor(sizeFlag / 9) + 1;\n  var numX = sizeFlag % 9 + 1;\n\n  if (blurhash.length !== 4 + 2 * numX * numY) {\n    throw new error_1.ValidationError(\"blurhash length mismatch: length is \" + blurhash.length + \" but it should be \" + (4 + 2 * numX * numY));\n  }\n};\n\nexports.isBlurhashValid = function (blurhash) {\n  try {\n    validateBlurhash(blurhash);\n  } catch (error) {\n    return {\n      result: false,\n      errorReason: error.message\n    };\n  }\n\n  return {\n    result: true\n  };\n};\n\nvar decodeDC = function (value) {\n  var intR = value >> 16;\n  var intG = value >> 8 & 255;\n  var intB = value & 255;\n  return [utils_1.sRGBToLinear(intR), utils_1.sRGBToLinear(intG), utils_1.sRGBToLinear(intB)];\n};\n\nvar decodeAC = function (value, maximumValue) {\n  var quantR = Math.floor(value / (19 * 19));\n  var quantG = Math.floor(value / 19) % 19;\n  var quantB = value % 19;\n  var rgb = [utils_1.signPow((quantR - 9) / 9, 2.0) * maximumValue, utils_1.signPow((quantG - 9) / 9, 2.0) * maximumValue, utils_1.signPow((quantB - 9) / 9, 2.0) * maximumValue];\n  return rgb;\n};\n\nvar decode = function (blurhash, width, height, punch) {\n  validateBlurhash(blurhash);\n  punch = punch | 1;\n  var sizeFlag = base83_1.decode83(blurhash[0]);\n  var numY = Math.floor(sizeFlag / 9) + 1;\n  var numX = sizeFlag % 9 + 1;\n  var quantisedMaximumValue = base83_1.decode83(blurhash[1]);\n  var maximumValue = (quantisedMaximumValue + 1) / 166;\n  var colors = new Array(numX * numY);\n\n  for (var i = 0; i < colors.length; i++) {\n    if (i === 0) {\n      var value = base83_1.decode83(blurhash.substring(2, 6));\n      colors[i] = decodeDC(value);\n    } else {\n      var value = base83_1.decode83(blurhash.substring(4 + i * 2, 6 + i * 2));\n      colors[i] = decodeAC(value, maximumValue * punch);\n    }\n  }\n\n  var bytesPerRow = width * 4;\n  var pixels = new Uint8ClampedArray(bytesPerRow * height);\n\n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      var r = 0;\n      var g = 0;\n      var b = 0;\n\n      for (var j = 0; j < numY; j++) {\n        for (var i = 0; i < numX; i++) {\n          var basis = Math.cos(Math.PI * x * i / width) * Math.cos(Math.PI * y * j / height);\n          var color = colors[i + j * numX];\n          r += color[0] * basis;\n          g += color[1] * basis;\n          b += color[2] * basis;\n        }\n      }\n\n      var intR = utils_1.linearTosRGB(r);\n      var intG = utils_1.linearTosRGB(g);\n      var intB = utils_1.linearTosRGB(b);\n      pixels[4 * x + 0 + y * bytesPerRow] = intR;\n      pixels[4 * x + 1 + y * bytesPerRow] = intG;\n      pixels[4 * x + 2 + y * bytesPerRow] = intB;\n      pixels[4 * x + 3 + y * bytesPerRow] = 255; // alpha\n    }\n  }\n\n  return pixels;\n};\n\nexports.default = decode;","map":{"version":3,"mappings":"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","names":["validateBlurhash","blurhash","length","error_1","sizeFlag","base83_1","numY","Math","floor","numX","exports","error","result","errorReason","message","decodeDC","value","intR","intG","intB","utils_1","decodeAC","maximumValue","quantR","quantG","quantB","rgb","decode","width","height","punch","quantisedMaximumValue","colors","Array","i","substring","bytesPerRow","pixels","Uint8ClampedArray","y","x","r","g","b","j","basis","cos","PI","color"],"sourceRoot":"","sources":["../src/decode.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}