{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar base83_1 = require(\"./base83\");\n\nvar utils_1 = require(\"./utils\");\n\nvar error_1 = require(\"./error\");\n\nvar bytesPerPixel = 4;\n\nvar multiplyBasisFunction = function (pixels, width, height, basisFunction) {\n  var r = 0;\n  var g = 0;\n  var b = 0;\n  var bytesPerRow = width * bytesPerPixel;\n\n  for (var x = 0; x < width; x++) {\n    for (var y = 0; y < height; y++) {\n      var basis = basisFunction(x, y);\n      r += basis * utils_1.sRGBToLinear(pixels[bytesPerPixel * x + 0 + y * bytesPerRow]);\n      g += basis * utils_1.sRGBToLinear(pixels[bytesPerPixel * x + 1 + y * bytesPerRow]);\n      b += basis * utils_1.sRGBToLinear(pixels[bytesPerPixel * x + 2 + y * bytesPerRow]);\n    }\n  }\n\n  var scale = 1 / (width * height);\n  return [r * scale, g * scale, b * scale];\n};\n\nvar encodeDC = function (value) {\n  var roundedR = utils_1.linearTosRGB(value[0]);\n  var roundedG = utils_1.linearTosRGB(value[1]);\n  var roundedB = utils_1.linearTosRGB(value[2]);\n  return (roundedR << 16) + (roundedG << 8) + roundedB;\n};\n\nvar encodeAC = function (value, maximumValue) {\n  var quantR = Math.floor(Math.max(0, Math.min(18, Math.floor(utils_1.signPow(value[0] / maximumValue, 0.5) * 9 + 9.5))));\n  var quantG = Math.floor(Math.max(0, Math.min(18, Math.floor(utils_1.signPow(value[1] / maximumValue, 0.5) * 9 + 9.5))));\n  var quantB = Math.floor(Math.max(0, Math.min(18, Math.floor(utils_1.signPow(value[2] / maximumValue, 0.5) * 9 + 9.5))));\n  return quantR * 19 * 19 + quantG * 19 + quantB;\n};\n\nvar encode = function (pixels, width, height, componentX, componentY) {\n  if (componentX < 1 || componentX > 9 || componentY < 1 || componentY > 9) {\n    throw new error_1.ValidationError(\"BlurHash must have between 1 and 9 components\");\n  }\n\n  if (width * height * 4 !== pixels.length) {\n    throw new error_1.ValidationError(\"Width and height must match the pixels array\");\n  }\n\n  var factors = [];\n\n  var _loop_1 = function (y) {\n    var _loop_2 = function (x) {\n      var normalisation = x == 0 && y == 0 ? 1 : 2;\n      var factor = multiplyBasisFunction(pixels, width, height, function (i, j) {\n        return normalisation * Math.cos(Math.PI * x * i / width) * Math.cos(Math.PI * y * j / height);\n      });\n      factors.push(factor);\n    };\n\n    for (var x = 0; x < componentX; x++) {\n      _loop_2(x);\n    }\n  };\n\n  for (var y = 0; y < componentY; y++) {\n    _loop_1(y);\n  }\n\n  var dc = factors[0];\n  var ac = factors.slice(1);\n  var hash = \"\";\n  var sizeFlag = componentX - 1 + (componentY - 1) * 9;\n  hash += base83_1.encode83(sizeFlag, 1);\n  var maximumValue;\n\n  if (ac.length > 0) {\n    var actualMaximumValue = Math.max.apply(Math, ac.map(function (val) {\n      return Math.max.apply(Math, val);\n    }));\n    var quantisedMaximumValue = Math.floor(Math.max(0, Math.min(82, Math.floor(actualMaximumValue * 166 - 0.5))));\n    maximumValue = (quantisedMaximumValue + 1) / 166;\n    hash += base83_1.encode83(quantisedMaximumValue, 1);\n  } else {\n    maximumValue = 1;\n    hash += base83_1.encode83(0, 1);\n  }\n\n  hash += base83_1.encode83(encodeDC(dc), 4);\n  ac.forEach(function (factor) {\n    hash += base83_1.encode83(encodeAC(factor, maximumValue), 2);\n  });\n  return hash;\n};\n\nexports.default = encode;","map":{"version":3,"mappings":"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","names":["bytesPerPixel","multiplyBasisFunction","pixels","width","height","basisFunction","r","g","b","bytesPerRow","x","y","basis","utils_1","scale","encodeDC","value","roundedR","roundedG","roundedB","encodeAC","maximumValue","quantR","Math","floor","max","min","quantG","quantB","encode","componentX","componentY","error_1","length","factors","normalisation","factor","i","j","cos","PI","push","dc","ac","slice","hash","sizeFlag","base83_1","actualMaximumValue","apply","map","val","quantisedMaximumValue","forEach","exports"],"sourceRoot":"","sources":["../src/encode.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}