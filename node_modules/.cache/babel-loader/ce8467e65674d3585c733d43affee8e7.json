{"ast":null,"code":"var _jsxFileName = \"/Users/santiagotonoli/Desktop/Portfolio/src/ColorModeSwitcher.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useColorMode, useColorModeValue, IconButton, Tooltip } from \"@chakra-ui/react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\nimport useSound from \"use-sound\";\nimport lightswitch from \"assets/audios/lightswitch.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColorModeSwitcher = props => {\n  _s();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  const text = useColorModeValue(\"dark\", \"light\");\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  const [play] = useSound(lightswitch, {\n    volume: 0.05,\n    sprite: {\n      on: [0, 300],\n      off: [500, 300]\n    }\n  });\n\n  const handleClick = () => {\n    text === \"dark\" ? play({\n      id: \"on\"\n    }) : play({\n      id: \"off\"\n    });\n    toggleColorMode();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    label: text === \"dark\" ? \"Dark mode\" : \"Light mode\",\n    \"aria-label\": \"A tooltip\",\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"md\",\n      fontSize: \"md\",\n      variant: \"ghost\",\n      color: \"current\",\n      marginLeft: \"2\",\n      onClick: handleClick,\n      icon: /*#__PURE__*/_jsxDEV(SwitchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this),\n      \"aria-label\": `Switch to ${text} mode`,\n      _hover: {\n        bg: useColorModeValue(\"gray.200\", \"gray.900\")\n      },\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ColorModeSwitcher, \"1FvutBNyV2TihYowixE959FBDHE=\", false, function () {\n  return [useColorMode, useColorModeValue, useColorModeValue, useSound, useColorModeValue];\n});\n\n_c = ColorModeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorModeSwitcher\");","map":{"version":3,"names":["React","useColorMode","useColorModeValue","IconButton","Tooltip","FaMoon","FaSun","useSound","lightswitch","ColorModeSwitcher","props","toggleColorMode","text","SwitchIcon","play","volume","sprite","on","off","handleClick","id","bg"],"sources":["/Users/santiagotonoli/Desktop/Portfolio/src/ColorModeSwitcher.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n  Tooltip\n} from \"@chakra-ui/react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\nimport useSound from \"use-sound\";\nimport lightswitch from \"assets/audios/lightswitch.mp3\";\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">;\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue(\"dark\", \"light\");\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  const [play] = useSound(lightswitch, {\n    volume: 0.05,\n    sprite: {\n      on: [0, 300],\n      off: [500, 300]\n    }\n  });\n\n  const handleClick = () => {\n    text === \"dark\" ? play({ id: \"on\" }) : play({ id: \"off\" });\n    toggleColorMode();\n  };\n\n  return (\n    <Tooltip\n      label={text === \"dark\" ? \"Dark mode\" : \"Light mode\"}\n      aria-label=\"A tooltip\"\n    >\n      <IconButton\n        size=\"md\"\n        fontSize=\"md\"\n        variant=\"ghost\"\n        color=\"current\"\n        marginLeft=\"2\"\n        onClick={handleClick}\n        icon={<SwitchIcon />}\n        aria-label={`Switch to ${text} mode`}\n        _hover={{\n          bg: useColorModeValue(\"gray.200\", \"gray.900\")\n        }}\n        {...props}\n      />\n    </Tooltip>\n  );\n};\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,YADF,EAEEC,iBAFF,EAGEC,UAHF,EAKEC,OALF,QAMO,kBANP;AAOA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,gBAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAIA,OAAO,MAAMC,iBAAmD,GAAGC,KAAK,IAAI;EAAA;;EAC1E,MAAM;IAAEC;EAAF,IAAsBV,YAAY,EAAxC;EACA,MAAMW,IAAI,GAAGV,iBAAiB,CAAC,MAAD,EAAS,OAAT,CAA9B;EACA,MAAMW,UAAU,GAAGX,iBAAiB,CAACG,MAAD,EAASC,KAAT,CAApC;EAEA,MAAM,CAACQ,IAAD,IAASP,QAAQ,CAACC,WAAD,EAAc;IACnCO,MAAM,EAAE,IAD2B;IAEnCC,MAAM,EAAE;MACNC,EAAE,EAAE,CAAC,CAAD,EAAI,GAAJ,CADE;MAENC,GAAG,EAAE,CAAC,GAAD,EAAM,GAAN;IAFC;EAF2B,CAAd,CAAvB;;EAQA,MAAMC,WAAW,GAAG,MAAM;IACxBP,IAAI,KAAK,MAAT,GAAkBE,IAAI,CAAC;MAAEM,EAAE,EAAE;IAAN,CAAD,CAAtB,GAAuCN,IAAI,CAAC;MAAEM,EAAE,EAAE;IAAN,CAAD,CAA3C;IACAT,eAAe;EAChB,CAHD;;EAKA,oBACE,QAAC,OAAD;IACE,KAAK,EAAEC,IAAI,KAAK,MAAT,GAAkB,WAAlB,GAAgC,YADzC;IAEE,cAAW,WAFb;IAAA,uBAIE,QAAC,UAAD;MACE,IAAI,EAAC,IADP;MAEE,QAAQ,EAAC,IAFX;MAGE,OAAO,EAAC,OAHV;MAIE,KAAK,EAAC,SAJR;MAKE,UAAU,EAAC,GALb;MAME,OAAO,EAAEO,WANX;MAOE,IAAI,eAAE,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAPR;MAQE,cAAa,aAAYP,IAAK,OARhC;MASE,MAAM,EAAE;QACNS,EAAE,EAAEnB,iBAAiB,CAAC,UAAD,EAAa,UAAb;MADf,CATV;MAAA,GAYMQ;IAZN;MAAA;MAAA;MAAA;IAAA;EAJF;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAvCM;;GAAMD,iB;UACiBR,Y,EACfC,iB,EACMA,iB,EAEJK,Q,EA4BHL,iB;;;KAjCDO,iB"},"metadata":{},"sourceType":"module"}