{"ast":null,"code":"!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? t(exports, require(\"node-vibrant\"), require(\"lodash.camelcase\"), require(\"lodash.invoke\"), require(\"react\")) : \"function\" == typeof define && define.amd ? define([\"exports\", \"node-vibrant\", \"lodash.camelcase\", \"lodash.invoke\", \"react\"], t) : t(e.reactPalette = {}, e.Vibrant, e.camelCase, e.invoke, e.react);\n}(this, function (e, t, a, r, n) {\n  t = t && t.hasOwnProperty(\"default\") ? t.default : t, a = a && a.hasOwnProperty(\"default\") ? a.default : a, r = r && r.hasOwnProperty(\"default\") ? r.default : r, n = n && n.hasOwnProperty(\"default\") ? n.default : n;\n\n  var o = function (e) {\n    try {\n      return Promise.resolve(t.from(e).getPalette()).then(function (e) {\n        return Object.keys(e).reduce(function (t, n) {\n          var o;\n          return Object.assign({}, t, ((o = {})[a(n)] = r(e, [n, \"getHex\"]), o));\n        }, {});\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n      c = {\n    loading: !0,\n    data: {},\n    error: void 0\n  };\n\n  function l(e, t) {\n    switch (t.type) {\n      case \"getPalette\":\n        return c;\n\n      case \"resolvePalette\":\n        return Object.assign({}, e, {\n          data: t.payload,\n          loading: !1\n        });\n\n      case \"rejectPalette\":\n        return Object.assign({}, e, {\n          error: t.payload,\n          loading: !1\n        });\n    }\n  }\n\n  function u(e) {\n    var t = n.useReducer(l, c),\n        a = t[0],\n        r = t[1];\n    return n.useEffect(function () {\n      r({\n        type: \"getPalette\"\n      }), o(e).then(function (e) {\n        r({\n          type: \"resolvePalette\",\n          payload: e\n        });\n      }).catch(function (e) {\n        r({\n          type: \"rejectPalette\",\n          payload: e\n        });\n      });\n    }, [e]), a;\n  }\n\n  var i = function (e) {\n    var t = e.children,\n        a = u(e.src);\n    return n.createElement(n.Fragment, null, t(a));\n  };\n\n  e.default = i, e.getPalette = o, e.Palette = i, e.usePalette = u;\n});","map":{"version":3,"mappings":";;;;;MAcsBA,cAAWC,CAAXD,EAAWC;IAAAA;MAAAA,uBACTC,EAAQC,IAARD,CAAaD,CAAbC,EAAkBF,UAAlBE,EADSD,EACSD,IADTC,CACSD,UAAlCI,CAAkCJ,EAAlCI;QAAAA,OAMCC,OAAOC,IAAPD,CAAYD,CAAZC,EAAqBE,MAArBF,CAAqBE,UALHC,CAKGD,EALEE,CAKFF,EALEE;UAAAA;UAAAA,OAAiBJ,kBAC1CG,CAD0CH,GAC1CG,SACFE,EAAUD,CAAVC,CADEF,IACuBG,EAAOP,CAAPO,EAAgB,CAACF,CAAD,EAAc,QAAd,CAAhBE,CADvBH,EACqDI,CAFXP,EAAjBI;QAE4B,CAGnDJ,EAA4D,EAA5DA,CANDD;MAM6D,CAPpCH;IAOoC,CAPpCA,CAOoC;MAAA;IAAA;EAAA;MCZ/DY,IAA6B;IACjCC,UAAS,CADwB;IAEjCC,MAAM,EAF2B;IAGjCC,YAAOC;EAH0B;;EAMnC,SAASC,CAAT,CAAiBC,CAAjB,EAAsCC,CAAtC,EAAsCA;IAAAA,QAC5BA,EAAOC,IADqBD;MACrBC,KACR,YADQA;QACR,OACIR,CADJ;;MACIA,KACJ,gBADIA;QACJ,OACIR,kBAAKc,CAALd,EAAKc;UAAOJ,MAAMK,EAAOE,OAApBH;UAA6BL,UAAS;QAAtCK,CAALd,CADJ;;MAC+C,KAC/C,eAD+C;QAC/C,OACIA,kBAAKc,CAALd,EAAKc;UAAOH,OAAOI,EAAOE,OAArBH;UAA8BL,UAAS;QAAvCK,CAALd,CADJ;IAN6Be;EAOmB;;EAAA,SAIzCG,CAJyC,CAI9BtB,CAJ8B,EAI9BA;IAAAA,QACCuB,EAAMC,UAAND,CAAiBN,CAAjBM,EAA0BX,CAA1BW,CADDvB;IAAAA,IAC2BY,QAD3BZ;IAAAA,IAC2BY,QAD3BZ;IAC2BY,OAEpDW,EAAME,SAANF,CAAME;MACJC,EAAS;QAAEN,MAAM;MAAR,CAATM,GAEA3B,EAAWC,CAAXD,EACG4B,IADH5B,CACG4B,UAAMxB,CAANwB,EAAMxB;QACLuB,EAAS;UAAEN,MAAM,gBAAR;UAA0BC,SAASlB;QAAnC,CAATuB;MAA4CvB,CAFhDJ,EAIG6B,KAJH7B,CAIG6B,UAAOC,CAAPD,EAAOC;QACNH,EAAS;UAAEN,MAAM,eAAR;UAAyBC,SAASQ;QAAlC,CAATH;MAA2CG,CAL/C9B,CAFA2B;IAO+CG,CARjDN,EAUG,CAACvB,CAAD,CAVHuB,GAYOL,CAd6CN;EAc7CM;;EAAAA,ICjCIY,cAAmCC,CAAnCD,EAAmCC;IAAAA;IAAAA,IAIxC5B,IAAUmB,QAJ8BS;IAI9BT,OAETC,kCAAGS,EAAS7B,CAAT6B,CAAHT,CAFSD;EAEGnB,CD2BZe;;EC3BYf;AAAAA","names":["getPalette","src","Vibrant","from","palette","Object","keys","reduce","acc","paletteName","camelCase","invoke","o","initialState","loading","data","error","undefined","reducer","state","action","type","payload","usePalette","React","useReducer","useEffect","dispatch","then","catch","ex","Palette","ref","children"],"sources":["../src/getPalette.ts","../src/usePalette.tsx","../src/Palette.tsx"],"sourcesContent":["import Vibrant from \"node-vibrant\";\r\nimport camelCase from \"lodash.camelcase\";\r\nimport invoke from 'lodash.invoke';\r\n\r\nexport type PaletteColors = {\r\n  vibrant?: string;\r\n  muted?: string;\r\n  darkVibrant?: string;\r\n  darkMuted?: string;\r\n  lightVibrant?: string;\r\n  lightMuted?: string;\r\n  [name: string]: string | undefined;\r\n};\r\n\r\nexport async function getPalette(src: string) {\r\n  const palette = await Vibrant.from(src).getPalette();\r\n  const setPaletteColor = (acc, paletteName) => ({\r\n    ...acc,\r\n    [camelCase(paletteName)]: invoke(palette, [paletteName, 'getHex'])\r\n  });\r\n\r\n  return Object.keys(palette).reduce<PaletteColors>(setPaletteColor, {});\r\n}\r\n","import React from \"react\";\r\nimport { getPalette, PaletteColors } from \"./getPalette\";\r\n\r\nexport type PaletteState = {\r\n  loading: boolean;\r\n  error?: Error;\r\n  data: PaletteColors;\r\n};\r\n\r\nconst initialState: PaletteState = {\r\n  loading: true,\r\n  data: {},\r\n  error: undefined,\r\n};\r\n\r\nfunction reducer(state: PaletteState, action): PaletteState {\r\n  switch (action.type) {\r\n    case \"getPalette\":\r\n      return initialState;\r\n    case \"resolvePalette\":\r\n      return { ...state, data: action.payload, loading: false };\r\n    case \"rejectPalette\":\r\n      return { ...state, error: action.payload, loading: false };\r\n  }\r\n}\r\n\r\nexport function usePalette(src: string) {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n  React.useEffect(() => {\r\n    dispatch({ type: \"getPalette\" });\r\n\r\n    getPalette(src)\r\n      .then((palette) => {\r\n        dispatch({ type: \"resolvePalette\", payload: palette });\r\n      })\r\n      .catch((ex) => {\r\n        dispatch({ type: \"rejectPalette\", payload: ex });\r\n      });\r\n  }, [src]);\r\n\r\n  return state;\r\n}\r\n","import React, { ReactNode } from \"react\";\r\nimport { PaletteState, usePalette } from \"./usePalette\";\r\n\r\nexport type PaletteProps = {\r\n  src: string;\r\n  children(palette: PaletteState): ReactNode;\r\n};\r\n\r\nexport const Palette: React.FC<PaletteProps> = ({\r\n  src,\r\n  children\r\n}: PaletteProps) => {\r\n  const palette = usePalette(src);\r\n\r\n  return <>{children(palette)}</>;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}