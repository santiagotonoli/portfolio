{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { EASINGS } from \"./__utils\";\nvar variants = {\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.1,\n      ease: EASINGS.easeOut\n    }\n  },\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n      ease: EASINGS.easeIn\n    }\n  }\n};\nexport var fadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants\n};\nexport var Fade = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    unmountOnExit,\n    in: isOpen,\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"unmountOnExit\", \"in\", \"className\"]);\n\n  var shouldExpand = unmountOnExit ? isOpen && unmountOnExit : true;\n  return /*#__PURE__*/React.createElement(AnimatePresence, null, shouldExpand && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-fade\", className)\n  }, fadeConfig, {\n    animate: isOpen || unmountOnExit ? \"enter\" : \"exit\"\n  }, rest)));\n});\n\nif (__DEV__) {\n  Fade.displayName = \"Fade\";\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,SAASC,eAAT,EAA2CC,MAA3C,QAAyD,eAAzD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwC,WAAxC;AAIA,IAAMC,QAA2B,GAAG;EAClCC,IAAI,EAAE;IACJC,OAAO,EAAE,CADL;IAEJC,UAAU,EAAE;MACVC,QAAQ,EAAE,GADA;MAEVC,IAAI,EAAEN,OAAO,CAACO;IAFJ;EAFR,CAD4B;EAQlCC,KAAK,EAAE;IACLL,OAAO,EAAE,CADJ;IAELC,UAAU,EAAE;MACVC,QAAQ,EAAE,GADA;MAEVC,IAAI,EAAEN,OAAO,CAACS;IAFJ;EAFP;AAR2B,CAApC;AAiBA,OAAO,IAAMC,UAAoD,GAAG;EAClEC,OAAO,EAAE,MADyD;EAElEC,OAAO,EAAE,OAFyD;EAGlEV,IAAI,EAAE,MAH4D;EAIlED;AAJkE,CAA7D;AAkBP,OAAO,IAAMY,IAAI,gBAAGd,KAAK,CAACe,UAANf,CAClB,CAACgB,KAAD,EAAQC,GAAR,KAAgB;EACd,IAAM;IAAEC,aAAF;IAAiBC,EAAE,EAAEC,MAArB;IAA6BC;EAA7B,IAAoDL,KAA1D;EAAA,IAAiDM,IAAjD,iCAA0DN,KAA1D;;EACA,IAAMO,YAAY,GAAGL,aAAa,GAAGE,MAAM,IAAIF,aAAb,GAA6B,IAA/D;EAEA,oBACElB,oBAACF,eAAD,QACGyB,YAAY,iBACXvB,oBAACD,MAAD,CAAQyB,GAAR;IACEP,GAAG,EAAEA,GADP;IAEEI,SAAS,EAAEzB,EAAE,CAAC,aAAD,EAAgByB,SAAhB;EAFf,GAGMV,UAHN;IAIEE,OAAO,EAAEO,MAAM,IAAIF,aAAVE,GAA0B,OAA1BA,GAAoC;EAJ/C,GAKME,IALN,EAFJ,CADF;AALgB,EAAb;;AAqBP,IAAIzB,OAAJ,EAAa;EACXiB,IAAI,CAACW,WAALX,GAAmB,MAAnBA;AACD","names":["cx","__DEV__","AnimatePresence","motion","React","EASINGS","variants","exit","opacity","transition","duration","ease","easeOut","enter","easeIn","fadeConfig","initial","animate","Fade","forwardRef","props","ref","unmountOnExit","in","isOpen","className","rest","shouldExpand","div","displayName"],"sources":["../../src/fade.tsx"],"sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { AnimatePresence, HTMLMotionProps, motion } from \"framer-motion\"\nimport * as React from \"react\"\nimport { EASINGS, MotionVariants } from \"./__utils\"\n\ntype FadeMotionVariant = MotionVariants<\"enter\" | \"exit\">\n\nconst variants: FadeMotionVariant = {\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.1,\n      ease: EASINGS.easeOut,\n    },\n  },\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n      ease: EASINGS.easeIn,\n    },\n  },\n}\n\nexport const fadeConfig: Omit<HTMLMotionProps<any>, \"transition\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants,\n}\n\nexport interface FadeProps extends HTMLMotionProps<\"div\"> {\n  /**\n   * If `true`, the element will unmount when `in={false}` and animation is done\n   */\n  unmountOnExit?: boolean\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in?: boolean\n}\n\nexport const Fade = React.forwardRef<HTMLDivElement, FadeProps>(\n  (props, ref) => {\n    const { unmountOnExit, in: isOpen, className, ...rest } = props\n    const shouldExpand = unmountOnExit ? isOpen && unmountOnExit : true\n\n    return (\n      <AnimatePresence>\n        {shouldExpand && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-fade\", className)}\n            {...fadeConfig}\n            animate={isOpen || unmountOnExit ? \"enter\" : \"exit\"}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  Fade.displayName = \"Fade\"\n}\n"]},"metadata":{},"sourceType":"module"}