{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { ariaAttr, callAllHandlers, omit } from \"@chakra-ui/utils\";\nimport { useFormControlContext } from \"./form-control\";\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\n\nexport function useFormControl(props) {\n  var _props$id;\n\n  var field = useFormControlContext();\n  var describedBy = []; // Error message must be described first in all scenarios.\n\n  if (field != null && field.hasFeedbackText) describedBy.push(field.feedbackId);\n  if (field != null && field.hasHelpText) describedBy.push(field.helpTextId);\n  var ariaDescribedBy = describedBy.join(\" \");\n  var cleanProps = omit(props, [\"isInvalid\", \"isDisabled\", \"isReadOnly\", \"isRequired\"]);\n  return _extends({}, cleanProps, {\n    id: (_props$id = props.id) != null ? _props$id : field == null ? void 0 : field.id,\n    disabled: props.disabled || props.isDisabled || (field == null ? void 0 : field.isDisabled),\n    readOnly: props.readOnly || props.isReadOnly || (field == null ? void 0 : field.isReadOnly),\n    required: props.required || props.isRequired || (field == null ? void 0 : field.isRequired),\n    \"aria-invalid\": ariaAttr(props.isInvalid || (field == null ? void 0 : field.isInvalid)),\n    \"aria-required\": ariaAttr(props.isRequired || (field == null ? void 0 : field.isRequired)),\n    \"aria-readonly\": ariaAttr(props.isReadOnly || (field == null ? void 0 : field.isReadOnly)),\n    \"aria-describedby\": ariaDescribedBy || undefined,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, props.onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, props.onBlur)\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,eAAnB,EAAoCC,IAApC,QAAgD,kBAAhD;AAEA,SAA6BC,qBAA7B,QAA0D,gBAA1D;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CACLC,KADK,EAEL;EAAA;;EACA,IAAMC,KAAK,GAAGH,qBAAqB,EAAnC;EACA,IAAMI,WAAqB,GAAG,EAA9B,CAFA,CAIA;;EACA,IAAID,KAAJ,QAAIA,SAAK,CAAEE,eAAX,EAA4BD,WAAW,CAACE,IAAZF,CAAiBD,KAAK,CAACI,UAAvBH;EAC5B,IAAID,KAAJ,QAAIA,SAAK,CAAEK,WAAX,EAAwBJ,WAAW,CAACE,IAAZF,CAAiBD,KAAK,CAACM,UAAvBL;EACxB,IAAMM,eAAe,GAAGN,WAAW,CAACO,IAAZP,CAAiB,GAAjBA,CAAxB;EAEA,IAAMQ,UAAU,GAAGb,IAAI,CAACG,KAAD,EAAQ,CAC7B,WAD6B,EAE7B,YAF6B,EAG7B,YAH6B,EAI7B,YAJ6B,CAAR,CAAvB;EAOA,oBACKU,UADL;IAEEC,EAAE,eAAEX,KAAK,CAACW,EAAR,wBAAcV,KAAd,QAAcA,GAAd,MAAcA,QAAK,CAAEU,EAFzB;IAGEC,QAAQ,EAAEZ,KAAK,CAACY,QAANZ,IAAkBA,KAAK,CAACa,UAAxBb,KAAsCC,KAAtC,QAAsCA,GAAtC,MAAsCA,QAAK,CAAEY,UAA7Cb,CAHZ;IAIEc,QAAQ,EAAEd,KAAK,CAACc,QAANd,IAAkBA,KAAK,CAACe,UAAxBf,KAAsCC,KAAtC,QAAsCA,GAAtC,MAAsCA,QAAK,CAAEc,UAA7Cf,CAJZ;IAKEgB,QAAQ,EAAEhB,KAAK,CAACgB,QAANhB,IAAkBA,KAAK,CAACiB,UAAxBjB,KAAsCC,KAAtC,QAAsCA,GAAtC,MAAsCA,QAAK,CAAEgB,UAA7CjB,CALZ;IAME,gBAAgBL,QAAQ,CAACK,KAAK,CAACkB,SAANlB,KAAmBC,KAAnB,QAAmBA,GAAnB,MAAmBA,QAAK,CAAEiB,SAA1BlB,CAAD,CAN1B;IAOE,iBAAiBL,QAAQ,CAACK,KAAK,CAACiB,UAANjB,KAAoBC,KAApB,QAAoBA,GAApB,MAAoBA,QAAK,CAAEgB,UAA3BjB,CAAD,CAP3B;IAQE,iBAAiBL,QAAQ,CAACK,KAAK,CAACe,UAANf,KAAoBC,KAApB,QAAoBA,GAApB,MAAoBA,QAAK,CAAEc,UAA3Bf,CAAD,CAR3B;IASE,oBAAoBQ,eAAe,IAAIW,SATzC;IAUEC,OAAO,EAAExB,eAAe,CAACK,KAAD,QAACA,GAAD,MAACA,QAAK,CAAEmB,OAAR,EAAiBpB,KAAK,CAACoB,OAAvB,CAV1B;IAWEC,MAAM,EAAEzB,eAAe,CAACK,KAAD,QAACA,GAAD,MAACA,QAAK,CAAEoB,MAAR,EAAgBrB,KAAK,CAACqB,MAAtB;EAXzB;AAaD","names":["ariaAttr","callAllHandlers","omit","useFormControlContext","useFormControl","props","field","describedBy","hasFeedbackText","push","feedbackId","hasHelpText","helpTextId","ariaDescribedBy","join","cleanProps","id","disabled","isDisabled","readOnly","isReadOnly","required","isRequired","isInvalid","undefined","onFocus","onBlur"],"sources":["../../src/use-form-control.ts"],"sourcesContent":["import { ariaAttr, callAllHandlers, omit } from \"@chakra-ui/utils\"\nimport { FocusEventHandler } from \"react\"\nimport { FormControlOptions, useFormControlContext } from \"./form-control\"\n\nexport interface UseFormControlProps<T extends HTMLElement>\n  extends FormControlOptions {\n  id?: string\n  onFocus?: FocusEventHandler<T>\n  onBlur?: FocusEventHandler<T>\n  disabled?: boolean\n  readOnly?: boolean\n  required?: boolean\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\nexport function useFormControl<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const field = useFormControlContext()\n  const describedBy: string[] = []\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText) describedBy.push(field.feedbackId)\n  if (field?.hasHelpText) describedBy.push(field.helpTextId)\n  const ariaDescribedBy = describedBy.join(\" \")\n\n  const cleanProps = omit(props, [\n    \"isInvalid\",\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n  ])\n\n  return {\n    ...cleanProps,\n    id: props.id ?? field?.id,\n    disabled: props.disabled || props.isDisabled || field?.isDisabled,\n    readOnly: props.readOnly || props.isReadOnly || field?.isReadOnly,\n    required: props.required || props.isRequired || field?.isRequired,\n    \"aria-invalid\": ariaAttr(props.isInvalid || field?.isInvalid),\n    \"aria-required\": ariaAttr(props.isRequired || field?.isRequired),\n    \"aria-readonly\": ariaAttr(props.isReadOnly || field?.isReadOnly),\n    \"aria-describedby\": ariaDescribedBy || undefined,\n    onFocus: callAllHandlers(field?.onFocus, props.onFocus),\n    onBlur: callAllHandlers(field?.onBlur, props.onBlur),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}