{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * Links are accessible elements used primarily for navigation.\n *\n * It integrates well with other routing libraries like\n * React Router, Reach Router and Next.js Link.\n *\n * @example\n *\n * ```jsx\n * <Link as={ReactRouterLink} to=\"/home\">Home</Link>\n * ```\n *\n * @see Docs https://chakra-ui.com/docs/layout/link\n */\n\nexport var Link = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyleConfig(\"Link\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      {\n    className,\n    isExternal\n  } = _omitThemingProps,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\", \"isExternal\"]);\n\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    target: isExternal ? \"_blank\" : undefined,\n    rel: isExternal ? \"noopener noreferrer\" : undefined,\n    ref: ref,\n    className: cx(\"chakra-link\", className)\n  }, rest, {\n    __css: styles\n  }));\n});\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SACEA,MADF,EAEEC,UAFF,EAGEC,gBAHF,EAKEC,cALF,QAOO,mBAPP;AAQA,SAASC,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,IAAI,gBAAGN,UAAU,CAAiB,CAACO,KAAD,EAAQC,GAAR,KAAgB;EAC7D,IAAMC,MAAM,GAAGP,cAAc,CAAC,MAAD,EAASK,KAAT,CAA7B;;EACA,wBAA2CN,gBAAgB,CAACM,KAAD,CAA3D;EAAA,IAAM;IAAEG,SAAF;IAAaC;EAAb,IAANC;EAAA,IAAkCC,IAAlC;;EAEA,oBACER,oBAACN,MAAD,CAAQe,CAAR;IACEC,MAAM,EAAEJ,UAAU,GAAG,QAAH,GAAcK,SADlC;IAEEC,GAAG,EAAEN,UAAU,GAAG,qBAAH,GAA2BK,SAF5C;IAGER,GAAG,EAAEA,GAHP;IAIEE,SAAS,EAAEP,EAAE,CAAC,aAAD,EAAgBO,SAAhB;EAJf,GAKMG,IALN;IAMEK,KAAK,EAAET;EANT,GADF;AAJ4B,EAAvB;;AAgBP,IAAIL,OAAJ,EAAa;EACXE,IAAI,CAACa,WAALb,GAAmB,MAAnBA;AACD","names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","__DEV__","React","Link","props","ref","styles","className","isExternal","_omitThemingProps","rest","a","target","undefined","rel","__css","displayName"],"sources":["../../src/link.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface LinkProps extends HTMLChakraProps<\"a\">, ThemingProps<\"Link\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   */\n  isExternal?: boolean\n}\n\n/**\n * Links are accessible elements used primarily for navigation.\n *\n * It integrates well with other routing libraries like\n * React Router, Reach Router and Next.js Link.\n *\n * @example\n *\n * ```jsx\n * <Link as={ReactRouterLink} to=\"/home\">Home</Link>\n * ```\n *\n * @see Docs https://chakra-ui.com/docs/layout/link\n */\nexport const Link = forwardRef<LinkProps, \"a\">((props, ref) => {\n  const styles = useStyleConfig(\"Link\", props)\n  const { className, isExternal, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.a\n      target={isExternal ? \"_blank\" : undefined}\n      rel={isExternal ? \"noopener noreferrer\" : undefined}\n      ref={ref}\n      className={cx(\"chakra-link\", className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nif (__DEV__) {\n  Link.displayName = \"Link\"\n}\n"]},"metadata":{},"sourceType":"module"}