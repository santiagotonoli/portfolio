{"ast":null,"code":"import { isCustomValue } from '../../utils/resolve-value.js';\nimport { MotionValue } from '../index.js';\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n *\n * @internal\n */\n\nfunction resolveMotionValue(value) {\n  var unwrappedValue = value instanceof MotionValue ? value.get() : value;\n  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;\n}\n\nexport { resolveMotionValue };","map":{"version":3,"names":["isCustomValue","MotionValue","resolveMotionValue","value","unwrappedValue","get","toValue"],"sources":["/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.js"],"sourcesContent":["import { isCustomValue } from '../../utils/resolve-value.js';\nimport { MotionValue } from '../index.js';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n *\n * @internal\n */\nfunction resolveMotionValue(value) {\n    var unwrappedValue = value instanceof MotionValue ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,8BAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;EAC/B,IAAIC,cAAc,GAAGD,KAAK,YAAYF,WAAjB,GAA+BE,KAAK,CAACE,GAAN,EAA/B,GAA6CF,KAAlE;EACA,OAAOH,aAAa,CAACI,cAAD,CAAb,GACDA,cAAc,CAACE,OAAf,EADC,GAEDF,cAFN;AAGH;;AAED,SAASF,kBAAT"},"metadata":{},"sourceType":"module"}