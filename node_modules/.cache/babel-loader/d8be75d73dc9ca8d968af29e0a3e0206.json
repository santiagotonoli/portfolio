{"ast":null,"code":"import useSSR from 'use-ssr';\nimport { invariant } from './utils';\nimport { CachePolicies } from './types';\nimport getLocalStorage from './storage/localStorage';\nimport getMemoryStorage from './storage/memoryStorage';\nvar NETWORK_ONLY = CachePolicies.NETWORK_ONLY,\n    NO_CACHE = CachePolicies.NO_CACHE;\n\nvar useCache = function (_a) {\n  var persist = _a.persist,\n      cacheLife = _a.cacheLife,\n      cachePolicy = _a.cachePolicy;\n\n  var _b = useSSR(),\n      isNative = _b.isNative,\n      isServer = _b.isServer;\n\n  invariant(!(isServer && persist), 'There is no persistent storage on the Server currently! üôÖ‚Äç‚ôÇÔ∏è');\n  invariant(!(isNative && persist), 'React Native support for persistent cache is not yet implemented. üôÖ‚Äç‚ôÇÔ∏è');\n  invariant(!(persist && [NO_CACHE, NETWORK_ONLY].includes(cachePolicy)), \"You cannot use option 'persist' with cachePolicy: \" + cachePolicy + \" \\uD83D\\uDE45\\u200D\\u2642\\uFE0F\"); // right now we're not worrying about react-native\n\n  if (persist) return getLocalStorage({\n    cacheLife: cacheLife || 24 * 3600000\n  });\n  return getMemoryStorage({\n    cacheLife: cacheLife\n  });\n};\n\nexport default useCache;","map":{"version":3,"names":["useSSR","invariant","CachePolicies","getLocalStorage","getMemoryStorage","NETWORK_ONLY","NO_CACHE","useCache","_a","persist","cacheLife","cachePolicy","_b","isNative","isServer","includes"],"sources":["/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/node_modules/use-http/dist/esm/useCache.js"],"sourcesContent":["import useSSR from 'use-ssr';\nimport { invariant } from './utils';\nimport { CachePolicies } from './types';\nimport getLocalStorage from './storage/localStorage';\nimport getMemoryStorage from './storage/memoryStorage';\nvar NETWORK_ONLY = CachePolicies.NETWORK_ONLY, NO_CACHE = CachePolicies.NO_CACHE;\nvar useCache = function (_a) {\n    var persist = _a.persist, cacheLife = _a.cacheLife, cachePolicy = _a.cachePolicy;\n    var _b = useSSR(), isNative = _b.isNative, isServer = _b.isServer;\n    invariant(!(isServer && persist), 'There is no persistent storage on the Server currently! üôÖ‚Äç‚ôÇÔ∏è');\n    invariant(!(isNative && persist), 'React Native support for persistent cache is not yet implemented. üôÖ‚Äç‚ôÇÔ∏è');\n    invariant(!(persist && [NO_CACHE, NETWORK_ONLY].includes(cachePolicy)), \"You cannot use option 'persist' with cachePolicy: \" + cachePolicy + \" \\uD83D\\uDE45\\u200D\\u2642\\uFE0F\");\n    // right now we're not worrying about react-native\n    if (persist)\n        return getLocalStorage({ cacheLife: cacheLife || (24 * 3600000) });\n    return getMemoryStorage({ cacheLife: cacheLife });\n};\nexport default useCache;\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,IAAIC,YAAY,GAAGH,aAAa,CAACG,YAAjC;AAAA,IAA+CC,QAAQ,GAAGJ,aAAa,CAACI,QAAxE;;AACA,IAAIC,QAAQ,GAAG,UAAUC,EAAV,EAAc;EACzB,IAAIC,OAAO,GAAGD,EAAE,CAACC,OAAjB;EAAA,IAA0BC,SAAS,GAAGF,EAAE,CAACE,SAAzC;EAAA,IAAoDC,WAAW,GAAGH,EAAE,CAACG,WAArE;;EACA,IAAIC,EAAE,GAAGZ,MAAM,EAAf;EAAA,IAAmBa,QAAQ,GAAGD,EAAE,CAACC,QAAjC;EAAA,IAA2CC,QAAQ,GAAGF,EAAE,CAACE,QAAzD;;EACAb,SAAS,CAAC,EAAEa,QAAQ,IAAIL,OAAd,CAAD,EAAyB,+DAAzB,CAAT;EACAR,SAAS,CAAC,EAAEY,QAAQ,IAAIJ,OAAd,CAAD,EAAyB,yEAAzB,CAAT;EACAR,SAAS,CAAC,EAAEQ,OAAO,IAAI,CAACH,QAAD,EAAWD,YAAX,EAAyBU,QAAzB,CAAkCJ,WAAlC,CAAb,CAAD,EAA+D,uDAAuDA,WAAvD,GAAqE,iCAApI,CAAT,CALyB,CAMzB;;EACA,IAAIF,OAAJ,EACI,OAAON,eAAe,CAAC;IAAEO,SAAS,EAAEA,SAAS,IAAK,KAAK;EAAhC,CAAD,CAAtB;EACJ,OAAON,gBAAgB,CAAC;IAAEM,SAAS,EAAEA;EAAb,CAAD,CAAvB;AACH,CAVD;;AAWA,eAAeH,QAAf"},"metadata":{},"sourceType":"module"}