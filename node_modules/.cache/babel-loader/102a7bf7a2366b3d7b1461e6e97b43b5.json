{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useSafeLayoutEffect } from \"@chakra-ui/hooks\";\nimport Icon from \"@chakra-ui/icon\";\nimport { chakra, forwardRef, useStyles, useMultiStyleConfig, omitThemingProps, StylesProvider } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useFormControlContext } from \"./form-control\";\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instructions on how to fix it.\n */\n\nexport var FormErrorMessage = /*#__PURE__*/forwardRef((passedProps, ref) => {\n  var _props$id;\n\n  var styles = useMultiStyleConfig(\"FormError\", passedProps);\n  var props = omitThemingProps(passedProps);\n  var field = useFormControlContext();\n  /**\n   * Notify the field context when the error message is rendered on screen,\n   * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n   */\n\n  useSafeLayoutEffect(() => {\n    field == null ? void 0 : field.setHasFeedbackText.on();\n    return () => field == null ? void 0 : field.setHasFeedbackText.off();\n  }, []);\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-message\", props.className);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    \"aria-live\": \"polite\",\n    ref: ref\n  }, props, {\n    __css: _extends({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, styles.text),\n    className: _className,\n    id: (_props$id = props.id) != null ? _props$id : field == null ? void 0 : field.feedbackId\n  })));\n});\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\";\n}\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\n\n\nexport var FormErrorIcon = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyles();\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-icon\", props.className);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    \"aria-hidden\": true\n  }, props, {\n    __css: styles.icon,\n    className: _className\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n  }));\n});\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\";\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,mBAAT,QAAoC,kBAApC;AACA,OAAOC,IAAP,MAAgC,iBAAhC;AACA,SACEC,MADF,EAEEC,UAFF,EAGEC,SAHF,EAKEC,mBALF,EAOEC,gBAPF,EAQEC,cARF,QASO,mBATP;AAUA,SAASC,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AAMA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,gBAAgB,gBAAGT,UAAU,CACxC,CAACU,WAAD,EAAcC,GAAd,KAAsB;EAAA;;EACpB,IAAMC,MAAM,GAAGV,mBAAmB,CAAC,WAAD,EAAcQ,WAAd,CAAlC;EACA,IAAMG,KAAK,GAAGV,gBAAgB,CAACO,WAAD,CAA9B;EAEA,IAAMI,KAAK,GAAGN,qBAAqB,EAAnC;EAEA;AACJ;AACA;AACA;;EACIX,mBAAmB,CAAC,MAAM;IACxBiB,KAAK,QAALA,iBAAK,CAAEC,kBAAPD,CAA0BE,EAA1BF;IACA,OAAO,MAAMA,KAAN,QAAMA,GAAN,MAAMA,QAAK,CAAEC,kBAAPD,CAA0BG,GAA1BH,EAAb;EAFiB,GAGhB,EAHgB,CAAnBjB;EAKA,IAAI,EAACiB,KAAD,QAACA,SAAK,CAAEI,SAAR,CAAJ,EAAuB,OAAO,IAAP;;EAEvB,IAAMC,UAAU,GAAGd,EAAE,CAAC,4BAAD,EAA+BQ,KAAK,CAACO,SAArC,CAArB;;EAEA,oBACEb,oBAACH,cAAD;IAAgBiB,KAAK,EAAET;EAAvB,gBACEL,oBAACR,MAAD,CAAQuB,GAAR;IACE,aAAU,QADZ;IAEEX,GAAG,EAAEA;EAFP,GAGME,KAHN;IAIEU,KAAK;MACHC,OAAO,EAAE,MADN;MAEHC,UAAU,EAAE;IAFT,GAGAb,MAAM,CAACc,IAHP,CAJP;IASEN,SAAS,EAAED,UATb;IAUEQ,EAAE,eAAEd,KAAK,CAACc,EAAR,wBAAcb,KAAd,QAAcA,GAAd,MAAcA,QAAK,CAAEc;EAVzB,GADF,CADF;AApBsC,EAAnC;;AAuCP,IAAItB,OAAJ,EAAa;EACXG,gBAAgB,CAACoB,WAAjBpB,GAA+B,kBAA/BA;AACD;AAED;AACA;AACA;AACA;;;AACA,OAAO,IAAMqB,aAAa,gBAAG9B,UAAU,CAAmB,CAACa,KAAD,EAAQF,GAAR,KAAgB;EACxE,IAAMC,MAAM,GAAGX,SAAS,EAAxB;EACA,IAAMa,KAAK,GAAGN,qBAAqB,EAAnC;EAEA,IAAI,EAACM,KAAD,QAACA,SAAK,CAAEI,SAAR,CAAJ,EAAuB,OAAO,IAAP;;EAEvB,IAAMC,UAAU,GAAGd,EAAE,CAAC,yBAAD,EAA4BQ,KAAK,CAACO,SAAlC,CAArB;;EAEA,oBACEb,oBAACT,IAAD;IACEa,GAAG,EAAEA,GADP;IAEE;EAFF,GAGME,KAHN;IAIEU,KAAK,EAAEX,MAAM,CAACmB,IAJhB;IAKEX,SAAS,EAAED;EALb,iBAOEZ;IACEyB,IAAI,EAAC,cADP;IAEEC,CAAC,EAAC;EAFJ,EAPF,CADF;AARqC,EAAhC;;AAwBP,IAAI3B,OAAJ,EAAa;EACXwB,aAAa,CAACD,WAAdC,GAA4B,eAA5BA;AACD","names":["useSafeLayoutEffect","Icon","chakra","forwardRef","useStyles","useMultiStyleConfig","omitThemingProps","StylesProvider","cx","__DEV__","React","useFormControlContext","FormErrorMessage","passedProps","ref","styles","props","field","setHasFeedbackText","on","off","isInvalid","_className","className","value","div","__css","display","alignItems","text","id","feedbackId","displayName","FormErrorIcon","icon","fill","d"],"sources":["../../src/form-error.tsx"],"sourcesContent":["import { useSafeLayoutEffect } from \"@chakra-ui/hooks\"\nimport Icon, { IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  forwardRef,\n  useStyles,\n  HTMLChakraProps,\n  useMultiStyleConfig,\n  ThemingProps,\n  omitThemingProps,\n  StylesProvider,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useFormControlContext } from \"./form-control\"\n\nexport interface FormErrorMessageProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"FormErrorMessage\"> {}\n\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instructions on how to fix it.\n */\nexport const FormErrorMessage = forwardRef<FormErrorMessageProps, \"div\">(\n  (passedProps, ref) => {\n    const styles = useMultiStyleConfig(\"FormError\", passedProps)\n    const props = omitThemingProps(passedProps)\n\n    const field = useFormControlContext()\n\n    /**\n     * Notify the field context when the error message is rendered on screen,\n     * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n     */\n    useSafeLayoutEffect(() => {\n      field?.setHasFeedbackText.on()\n      return () => field?.setHasFeedbackText.off()\n    }, [])\n\n    if (!field?.isInvalid) return null\n\n    const _className = cx(\"chakra-form__error-message\", props.className)\n\n    return (\n      <StylesProvider value={styles}>\n        <chakra.div\n          aria-live=\"polite\"\n          ref={ref}\n          {...props}\n          __css={{\n            display: \"flex\",\n            alignItems: \"center\",\n            ...styles.text,\n          }}\n          className={_className}\n          id={props.id ?? field?.feedbackId}\n        />\n      </StylesProvider>\n    )\n  },\n)\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\"\n}\n\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\nexport const FormErrorIcon = forwardRef<IconProps, \"svg\">((props, ref) => {\n  const styles = useStyles()\n  const field = useFormControlContext()\n\n  if (!field?.isInvalid) return null\n\n  const _className = cx(\"chakra-form__error-icon\", props.className)\n\n  return (\n    <Icon\n      ref={ref}\n      aria-hidden\n      {...props}\n      __css={styles.icon}\n      className={_className}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n      />\n    </Icon>\n  )\n})\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\"\n}\n"]},"metadata":{},"sourceType":"module"}