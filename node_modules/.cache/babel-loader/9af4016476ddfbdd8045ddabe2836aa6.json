{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useSafeLayoutEffect, useForceUpdate } from \"@chakra-ui/hooks\";\nexport function useDescendant(props) {\n  var {\n    context,\n    element,\n    index: indexProp,\n    disabled,\n    focusable\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"context\", \"element\", \"index\", \"disabled\", \"focusable\"]);\n\n  var forceUpdate = useForceUpdate();\n  var {\n    register,\n    unregister,\n    descendants\n  } = context;\n  useSafeLayoutEffect(() => {\n    if (!element) {\n      forceUpdate();\n    }\n    /**\n     * Don't register this descendant if it is disabled and not focusable\n     */\n\n\n    if (disabled && !focusable) return undefined;\n    /**\n     * else, register the descendant\n     */\n\n    register(_extends({\n      element,\n      disabled,\n      focusable\n    }, rest));\n    /**\n     * when it unmounts, unregister the descendant\n     */\n\n    return () => {\n      if (element) {\n        unregister(element);\n      }\n    }; // eslint-disable-next-line\n  }, [element, disabled, focusable, ...Object.values(rest)]);\n  var index = indexProp != null ? indexProp : descendants.findIndex(descendant => descendant.element === element);\n  return index;\n}\nexport function useDescendants() {\n  var [descendants, setDescendants] = useState([]);\n  var register = useCallback(_ref => {\n    var {\n      element\n    } = _ref,\n        rest = _objectWithoutPropertiesLoose(_ref, [\"element\"]);\n\n    if (!element) return; // @ts-ignore\n\n    setDescendants(prevDescendants => {\n      if (prevDescendants.find(item => item.element === element) == null) {\n        var index = prevDescendants.findIndex(item => {\n          if (!item.element || !element) return false;\n          return Boolean(item.element.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_PRECEDING);\n        });\n\n        var newItem = _extends({\n          element\n        }, rest);\n\n        if (index === -1) {\n          return [...prevDescendants, newItem];\n        }\n\n        return [...prevDescendants.slice(0, index), newItem, ...prevDescendants.slice(index)];\n      }\n\n      return prevDescendants;\n    });\n  }, []);\n  var unregister = useCallback(element => {\n    if (!element) return;\n    setDescendants(descendants => descendants.filter(descendant => element !== descendant.element));\n  }, []);\n  var context = useMemo(() => ({\n    descendants,\n    register,\n    unregister\n  }), [descendants, register, unregister]);\n  return context;\n}","map":{"version":3,"mappings":"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","names":["useCallback","useMemo","useState","useSafeLayoutEffect","useForceUpdate","useDescendant","props","context","element","index","indexProp","disabled","focusable","rest","forceUpdate","register","unregister","descendants","undefined","Object","values","findIndex","descendant","useDescendants","setDescendants","_ref","prevDescendants","find","item","Boolean","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","newItem","slice","filter"],"sources":["../../src/use-descendant.ts"],"sourcesContent":["import { useCallback, useMemo, useState } from \"react\"\nimport { useSafeLayoutEffect, useForceUpdate } from \"@chakra-ui/hooks\"\n\nexport type Descendant<T extends HTMLElement, P = {}> = P & {\n  element: T | null\n  index?: number\n  disabled?: boolean\n  focusable?: boolean\n}\n\nexport interface DescendantContext<T extends HTMLElement, P = {}> {\n  descendants: Descendant<T, P>[]\n  register: (descendant: Descendant<T, P>) => void\n  unregister: (element: T) => void\n}\n\nexport type UseDescendantProps<T extends HTMLElement, P> = {\n  context: DescendantContext<T, P>\n} & Descendant<T, P>\n\nexport function useDescendant<T extends HTMLElement, P>(\n  props: UseDescendantProps<T, P>,\n) {\n  const {\n    context,\n    element,\n    index: indexProp,\n    disabled,\n    focusable,\n    ...rest\n  } = props\n\n  const forceUpdate = useForceUpdate()\n  const { register, unregister, descendants } = context\n\n  useSafeLayoutEffect(() => {\n    if (!element) {\n      forceUpdate()\n    }\n\n    /**\n     * Don't register this descendant if it is disabled and not focusable\n     */\n    if (disabled && !focusable) return undefined\n\n    /**\n     * else, register the descendant\n     */\n    register({ element, disabled, focusable, ...rest } as any)\n\n    /**\n     * when it unmounts, unregister the descendant\n     */\n    return () => {\n      if (element) {\n        unregister(element)\n      }\n    }\n    // eslint-disable-next-line\n  }, [element, disabled, focusable, ...Object.values(rest)])\n\n  const index =\n    indexProp ??\n    descendants.findIndex((descendant) => descendant.element === element)\n\n  return index\n}\n\nexport function useDescendants<T extends HTMLElement, P>() {\n  const [descendants, setDescendants] = useState<Descendant<T, P>[]>([])\n\n  const register = useCallback(({ element, ...rest }: Descendant<T, P>) => {\n    if (!element) return\n\n    // @ts-ignore\n    setDescendants((prevDescendants) => {\n      if (prevDescendants.find((item) => item.element === element) == null) {\n        const index = prevDescendants.findIndex((item) => {\n          if (!item.element || !element) return false\n\n          return Boolean(\n            item.element.compareDocumentPosition(element) &\n              Node.DOCUMENT_POSITION_PRECEDING,\n          )\n        })\n\n        const newItem = { element, ...rest }\n\n        if (index === -1) {\n          return [...prevDescendants, newItem]\n        }\n        return [\n          ...prevDescendants.slice(0, index),\n          newItem,\n          ...prevDescendants.slice(index),\n        ]\n      }\n      return prevDescendants\n    })\n  }, [])\n\n  const unregister = useCallback((element: T) => {\n    if (!element) return\n    setDescendants((descendants) =>\n      descendants.filter((descendant) => element !== descendant.element),\n    )\n  }, [])\n\n  const context = useMemo(() => ({ descendants, register, unregister }), [\n    descendants,\n    register,\n    unregister,\n  ])\n\n  return context\n}\n"]},"metadata":{},"sourceType":"module"}