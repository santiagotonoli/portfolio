{"ast":null,"code":"import { breakpoints as defaultBreakPoints } from \"@chakra-ui/utils\";\nexport function getClosestValue(values, breakpoint, breakpoints) {\n  if (breakpoints === void 0) {\n    breakpoints = defaultBreakPoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints[index];\n    return values[_key];\n  }\n\n  return undefined;\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,IAAIC,kBAAxB,QAAkD,kBAAlD;AAEA,OAAO,SAASC,eAAT,CACLC,MADK,EAELC,UAFK,EAGLJ,WAHK,EAIL;EAAA,IADAA,WACA;IADAA,WACA,GADcC,kBAAdD;EACA;;EACA,IAAIK,KAAK,GAAGC,MAAM,CAACC,IAAPD,CAAYH,MAAZG,EAAoBE,OAApBF,CAA4BF,UAA5BE,CAAZ;;EAEA,IAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;IAChB,OAAOF,MAAM,CAACC,UAAD,CAAb;EACD;;EAED,IAAIK,SAAS,GAAGT,WAAW,CAACQ,OAAZR,CAAoBI,UAApBJ,CAAhB;;EAEA,OAAOS,SAAS,IAAI,CAApB,EAAuB;IACrB,IAAMC,GAAG,GAAGV,WAAW,CAACS,SAAD,CAAvB;;IAEA,IAAIN,MAAM,CAACO,GAAD,CAANP,IAAe,IAAnB,EAAyB;MACvBE,KAAK,GAAGI,SAARJ;MACA;IACD;;IACDI,SAAS,IAAI,CAAbA;EACD;;EAED,IAAIJ,KAAK,KAAK,CAAC,CAAf,EAAkB;IAChB,IAAMK,IAAG,GAAGV,WAAW,CAACK,KAAD,CAAvB;IACA,OAAOF,MAAM,CAACO,IAAD,CAAb;EACD;;EAED,OAAOC,SAAP;AACD","names":["breakpoints","defaultBreakPoints","getClosestValue","values","breakpoint","index","Object","keys","indexOf","stopIndex","key","undefined"],"sources":["../../src/media-query.utils.ts"],"sourcesContent":["import { breakpoints as defaultBreakPoints } from \"@chakra-ui/utils\"\n\nexport function getClosestValue<T = any>(\n  values: Record<string, T>,\n  breakpoint: string,\n  breakpoints = defaultBreakPoints,\n) {\n  let index = Object.keys(values).indexOf(breakpoint)\n\n  if (index !== -1) {\n    return values[breakpoint]\n  }\n\n  let stopIndex = breakpoints.indexOf(breakpoint)\n\n  while (stopIndex >= 0) {\n    const key = breakpoints[stopIndex]\n\n    if (values[key] != null) {\n      index = stopIndex\n      break\n    }\n    stopIndex -= 1\n  }\n\n  if (index !== -1) {\n    const key = breakpoints[index]\n    return values[key]\n  }\n\n  return undefined\n}\n"]},"metadata":{},"sourceType":"module"}