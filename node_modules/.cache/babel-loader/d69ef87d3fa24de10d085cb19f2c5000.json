{"ast":null,"code":"import { isNumber, isObject } from \"@chakra-ui/utils\";\n\nvar analyzeCSSValue = value => {\n  var num = parseFloat(value.toString());\n  var unit = value.toString().replace(String(num), \"\");\n  return {\n    unitless: !unit,\n    value: num,\n    unit\n  };\n};\n\nexport var px = value => {\n  if (value == null) return value;\n  var {\n    unitless\n  } = analyzeCSSValue(value);\n  return unitless || isNumber(value) ? value + \"px\" : value;\n};\nexport var tokenToCSSVar = (scale, value) => theme => {\n  var valueStr = String(value);\n  var key = scale ? scale + \".\" + valueStr : valueStr;\n  return isObject(theme.__cssMap) && key in theme.__cssMap ? theme.__cssMap[key].varRef : value;\n};\nexport function createTransform(options) {\n  var {\n    scale,\n    transform,\n    compose\n  } = options;\n\n  var fn = (value, theme) => {\n    var _transform;\n\n    var _value = tokenToCSSVar(scale, value)(theme);\n\n    var result = (_transform = transform == null ? void 0 : transform(_value, theme)) != null ? _transform : _value;\n\n    if (compose) {\n      result = compose(result, theme);\n    }\n\n    return result;\n  };\n\n  return fn;\n}","map":{"version":3,"mappings":"AAAA,SAAeA,QAAf,EAAyBC,QAAzB,QAAyC,kBAAzC;;AAIA,IAAMC,eAAe,GAAIC,KAAD,IAA4B;EAClD,IAAMC,GAAG,GAAGC,UAAU,CAACF,KAAK,CAACG,QAANH,EAAD,CAAtB;EACA,IAAMI,IAAI,GAAGJ,KAAK,CAACG,QAANH,GAAiBK,OAAjBL,CAAyBM,MAAM,CAACL,GAAD,CAA/BD,EAAsC,EAAtCA,CAAb;EACA,OAAO;IAAEO,QAAQ,EAAE,CAACH,IAAb;IAAmBJ,KAAK,EAAEC,GAA1B;IAA+BG;EAA/B,CAAP;AAHF;;AAMA,OAAO,IAAMI,EAAE,GAAIR,KAAD,IAAoC;EACpD,IAAIA,KAAK,IAAI,IAAb,EAAmB,OAAOA,KAAP;EACnB,IAAM;IAAEO;EAAF,IAAeR,eAAe,CAACC,KAAD,CAApC;EACA,OAAOO,QAAQ,IAAIV,QAAQ,CAACG,KAAD,CAApBO,GAAiCP,KAAjC,UAA6CA,KAApD;AAHK;AAYP,OAAO,IAAMS,aAAa,GAAG,CAACC,KAAD,EAAoBV,KAApB,KAC3BW,KAD8D,IAE3D;EACH,IAAMC,QAAQ,GAAGN,MAAM,CAACN,KAAD,CAAvB;EACA,IAAMa,GAAG,GAAGH,KAAK,GAAMA,KAAN,MAAMA,GAASE,QAAf,GAA4BA,QAA7C;EACA,OAAOd,QAAQ,CAACa,KAAK,CAACG,QAAP,CAARhB,IAA4Be,GAAG,IAAIF,KAAK,CAACG,QAAzChB,GACHa,KAAK,CAACG,QAANH,CAAeE,GAAfF,EAAoBI,MADjBjB,GAEHE,KAFJ;AALK;AAUP,OAAO,SAASgB,eAAT,CAAyBC,OAAzB,EAA0D;EAC/D,IAAM;IAAEP,KAAF;IAASQ,SAAT;IAAoBC;EAApB,IAAgCF,OAAtC;;EAEA,IAAMG,EAAa,GAAG,CAACpB,KAAD,EAAQW,KAAR,KAAkB;IAAA;;IACtC,IAAMU,MAAM,GAAGZ,aAAa,CAACC,KAAD,EAAQV,KAAR,CAAbS,CAA4BE,KAA5BF,CAAf;;IACA,IAAIa,MAAM,iBAAGJ,SAAH,QAAGA,GAAH,MAAGA,YAAS,CAAGG,MAAH,EAAWV,KAAX,CAAZ,yBAAiCU,MAA3C;;IACA,IAAIF,OAAJ,EAAa;MACXG,MAAM,GAAGH,OAAO,CAACG,MAAD,EAASX,KAAT,CAAhBW;IACD;;IACD,OAAOA,MAAP;EANF;;EASA,OAAOF,EAAP;AACD","names":["isNumber","isObject","analyzeCSSValue","value","num","parseFloat","toString","unit","replace","String","unitless","px","tokenToCSSVar","scale","theme","valueStr","key","__cssMap","varRef","createTransform","options","transform","compose","fn","_value","result"],"sources":["../../src/create-transform.ts"],"sourcesContent":["import { Dict, isNumber, isObject } from \"@chakra-ui/utils\"\nimport type { ThemeScale } from \"./css-var\"\nimport type { Transform } from \"./types\"\n\nconst analyzeCSSValue = (value: number | string) => {\n  const num = parseFloat(value.toString())\n  const unit = value.toString().replace(String(num), \"\")\n  return { unitless: !unit, value: num, unit }\n}\n\nexport const px = (value: number | string): string => {\n  if (value == null) return value\n  const { unitless } = analyzeCSSValue(value)\n  return unitless || isNumber(value) ? `${value}px` : value\n}\n\ninterface CreateTransformOptions {\n  scale: ThemeScale\n  compose?: Transform\n  transform?: Transform\n}\n\nexport const tokenToCSSVar = (scale: ThemeScale, value: any) => (\n  theme: Dict,\n) => {\n  const valueStr = String(value)\n  const key = scale ? `${scale}.${valueStr}` : valueStr\n  return isObject(theme.__cssMap) && key in theme.__cssMap\n    ? theme.__cssMap[key].varRef\n    : value\n}\n\nexport function createTransform(options: CreateTransformOptions) {\n  const { scale, transform, compose } = options\n\n  const fn: Transform = (value, theme) => {\n    const _value = tokenToCSSVar(scale, value)(theme)\n    let result = transform?.(_value, theme) ?? _value\n    if (compose) {\n      result = compose(result, theme)\n    }\n    return result\n  }\n\n  return fn\n}\n"]},"metadata":{},"sourceType":"module"}