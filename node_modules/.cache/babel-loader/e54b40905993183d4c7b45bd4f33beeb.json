{"ast":null,"code":"var templates = {\n  auto: \"var(--chakra-transform)\",\n  \"auto-gpu\": \"var(--chakra-transform-gpu)\"\n};\nexport var transform = {\n  transform: {\n    property: \"transform\",\n\n    transform(value) {\n      var _templates$value;\n\n      return (_templates$value = templates[value]) != null ? _templates$value : value;\n    }\n\n  },\n  transformOrigin: true\n};","map":{"version":3,"mappings":"AAIA,IAAMA,SAAS,GAAG;EAChBC,IAAI,EAAE,yBADU;EAEhB,YAAY;AAFI,CAAlB;AAKA,OAAO,IAAMC,SAAiB,GAAG;EAC/BA,SAAS,EAAE;IACTC,QAAQ,EAAE,WADD;;IAETD,SAAS,CAACE,KAAD,EAAQ;MAAA;;MACf,2BAAOJ,SAAS,CAACI,KAAD,CAAhB,+BAA2BA,KAA3B;IACD;;EAJQ,CADoB;EAO/BC,eAAe,EAAE;AAPc,CAA1B","names":["templates","auto","transform","property","value","transformOrigin"],"sources":["../../../src/config/transform.ts"],"sourcesContent":["import * as CSS from \"csstype\"\nimport { Config } from \"../prop-config\"\nimport { Token } from \"../utils\"\n\nconst templates = {\n  auto: \"var(--chakra-transform)\",\n  \"auto-gpu\": \"var(--chakra-transform-gpu)\",\n}\n\nexport const transform: Config = {\n  transform: {\n    property: \"transform\",\n    transform(value) {\n      return templates[value] ?? value\n    },\n  },\n  transformOrigin: true,\n}\n\nexport interface TransformProps {\n  /**\n   * The CSS `transform` property\n   */\n  transform?: Token<CSS.Property.Transform | keyof typeof templates>\n  /**\n   * The CSS `transform-origin` property\n   */\n  transformOrigin?: Token<CSS.Property.TransformOrigin | number, \"sizes\">\n}\n"]},"metadata":{},"sourceType":"module"}