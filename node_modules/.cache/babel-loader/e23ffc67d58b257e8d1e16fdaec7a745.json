{"ast":null,"code":"// Really great work done by Diego Haz on this one\n// https://github.com/reakit/reakit/blob/master/packages/reakit-utils/src/tabbable.ts\nimport { getOwnerDocument } from \"./dom\";\nexport var hasDisplayNone = element => window.getComputedStyle(element).display === \"none\";\nexport var hasTabIndex = element => element.hasAttribute(\"tabindex\");\nexport var hasNegativeTabIndex = element => hasTabIndex(element) && element.tabIndex === -1;\nexport function isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nexport function isInputElement(element) {\n  return isHTMLElement(element) && element.tagName.toLowerCase() === \"input\" && \"select\" in element;\n}\nexport function isActiveElement(element) {\n  var doc = element instanceof HTMLElement ? getOwnerDocument(element) : document;\n  return doc.activeElement === element;\n}\nexport function hasFocusWithin(element) {\n  if (!document.activeElement) return false;\n  return element.contains(document.activeElement);\n}\nexport function isHTMLElement(element) {\n  return element instanceof HTMLElement;\n}\nexport function isHidden(element) {\n  if (element.parentElement && isHidden(element.parentElement)) return true;\n  return element.hidden;\n}\nexport function isContentEditable(element) {\n  var value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nexport function isFocusable(element) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false;\n  }\n\n  var {\n    localName\n  } = element;\n  var focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0) return true;\n  var others = {\n    a: () => element.hasAttribute(\"href\"),\n    audio: () => element.hasAttribute(\"controls\"),\n    video: () => element.hasAttribute(\"controls\")\n  };\n\n  if (localName in others) {\n    return others[localName]();\n  }\n\n  if (isContentEditable(element)) return true;\n  return hasTabIndex(element);\n}\nexport function isTabbable(element) {\n  if (!element) return false;\n  return isHTMLElement(element) && isFocusable(element) && !hasNegativeTabIndex(element);\n}","map":{"version":3,"mappings":"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","names":["getOwnerDocument","hasDisplayNone","element","window","getComputedStyle","display","hasTabIndex","hasAttribute","hasNegativeTabIndex","tabIndex","isDisabled","Boolean","getAttribute","isInputElement","isHTMLElement","tagName","toLowerCase","isActiveElement","doc","HTMLElement","document","activeElement","hasFocusWithin","contains","isHidden","parentElement","hidden","isContentEditable","value","isFocusable","localName","focusableTags","indexOf","others","a","audio","video","isTabbable"],"sources":["../../src/tabbable.ts"],"sourcesContent":["// Really great work done by Diego Haz on this one\n// https://github.com/reakit/reakit/blob/master/packages/reakit-utils/src/tabbable.ts\n\nimport { getOwnerDocument } from \"./dom\"\n\nexport const hasDisplayNone = (element: HTMLElement) =>\n  window.getComputedStyle(element).display === \"none\"\n\nexport const hasTabIndex = (element: HTMLElement) =>\n  element.hasAttribute(\"tabindex\")\n\nexport const hasNegativeTabIndex = (element: HTMLElement) =>\n  hasTabIndex(element) && element.tabIndex === -1\n\nexport function isDisabled(element: HTMLElement) {\n  return (\n    Boolean(element.getAttribute(\"disabled\")) === true ||\n    Boolean(element.getAttribute(\"aria-disabled\")) === true\n  )\n}\n\nexport interface FocusableElement {\n  focus(options?: FocusOptions): void\n}\n\nexport function isInputElement(\n  element: FocusableElement,\n): element is HTMLInputElement {\n  return (\n    isHTMLElement(element) &&\n    element.tagName.toLowerCase() === \"input\" &&\n    \"select\" in element\n  )\n}\n\nexport function isActiveElement(element: FocusableElement) {\n  const doc =\n    element instanceof HTMLElement ? getOwnerDocument(element) : document\n  return doc.activeElement === (element as HTMLElement)\n}\n\nexport function hasFocusWithin(element: HTMLElement) {\n  if (!document.activeElement) return false\n  return element.contains(document.activeElement)\n}\n\nexport function isHTMLElement(element: any): element is HTMLElement {\n  return element instanceof HTMLElement\n}\n\nexport function isHidden(element: HTMLElement) {\n  if (element.parentElement && isHidden(element.parentElement)) return true\n  return element.hidden\n}\n\nexport function isContentEditable(element: HTMLElement) {\n  const value = element.getAttribute(\"contenteditable\")\n  return value !== \"false\" && value != null\n}\n\nexport function isFocusable(element: HTMLElement) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false\n  }\n\n  const { localName } = element\n  const focusableTags = [\"input\", \"select\", \"textarea\", \"button\"]\n  if (focusableTags.indexOf(localName) >= 0) return true\n\n  const others = {\n    a: () => element.hasAttribute(\"href\"),\n    audio: () => element.hasAttribute(\"controls\"),\n    video: () => element.hasAttribute(\"controls\"),\n  }\n\n  if (localName in others) {\n    return others[localName as keyof typeof others]()\n  }\n\n  if (isContentEditable(element)) return true\n\n  return hasTabIndex(element)\n}\n\nexport function isTabbable(element?: HTMLElement | null) {\n  if (!element) return false\n  return (\n    isHTMLElement(element) &&\n    isFocusable(element) &&\n    !hasNegativeTabIndex(element)\n  )\n}\n"]},"metadata":{},"sourceType":"module"}