{"ast":null,"code":"import * as React from \"react\";\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\";\n/**\n * Credit: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n */\n\nvar handoffComplete = false;\nvar id = 0;\n\nvar genId = () => ++id;\n/**\n * Reack hook to generate unique id\n *\n * @param idProp the external id passed from the user\n * @param prefix prefix to append before the id\n */\n\n\nexport function useId(idProp, prefix) {\n  var initialId = idProp || (handoffComplete ? genId() : null);\n  var [uid, setUid] = React.useState(initialId);\n  useSafeLayoutEffect(() => {\n    if (uid === null) setUid(genId());\n  }, []);\n  React.useEffect(() => {\n    if (handoffComplete === false) {\n      handoffComplete = true;\n    }\n  }, []);\n  var id = uid != null ? uid.toString() : undefined;\n  return prefix ? prefix + \"-\" + id : id;\n}\n/**\n * Reack hook to generate ids for use in compound components\n *\n * @param idProp the external id passed from the user\n * @param prefixes array of prefixes to use\n *\n * @example\n *\n * ```js\n * const [buttonId, menuId] = useIds(\"52\", \"button\", \"menu\")\n *\n * // buttonId will be `button-52`\n * // menuId will be `menu-52`\n * ```\n */\n\nexport function useIds(idProp) {\n  var id = useId(idProp);\n\n  for (var _len = arguments.length, prefixes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    prefixes[_key - 1] = arguments[_key];\n  }\n\n  return prefixes.map(prefix => prefix + \"-\" + id);\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA;AACA;AACA;;AACA,IAAIC,eAAe,GAAG,KAAtB;AACA,IAAIC,EAAE,GAAG,CAAT;;AACA,IAAMC,KAAK,GAAG,MAAM,EAAED,EAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASE,KAAT,CAAeC,MAAf,EAAgCC,MAAhC,EAAiD;EACtD,IAAMC,SAAS,GAAGF,MAAM,KAAKJ,eAAe,GAAGE,KAAK,EAAR,GAAa,IAAjC,CAAxB;EACA,IAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBV,KAAK,CAACW,QAANX,CAAeQ,SAAfR,CAAtB;EAEAC,mBAAmB,CAAC,MAAM;IACxB,IAAIQ,GAAG,KAAK,IAAZ,EAAkBC,MAAM,CAACN,KAAK,EAAN,CAANM;EADD,GAEhB,EAFgB,CAAnBT;EAIAD,KAAK,CAACY,SAANZ,CAAgB,MAAM;IACpB,IAAIE,eAAe,KAAK,KAAxB,EAA+B;MAC7BA,eAAe,GAAG,IAAlBA;IACD;EAHH,GAIG,EAJHF;EAMA,IAAMG,EAAE,GAAGM,GAAG,IAAI,IAAPA,GAAcA,GAAG,CAACI,QAAJJ,EAAdA,GAA+BK,SAA1C;EACA,OAAQP,MAAM,GAAMA,MAAN,MAAMA,GAAUJ,EAAhB,GAAuBA,EAArC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASY,MAAT,CAAgBT,MAAhB,EAAwD;EAC7D,IAAMH,EAAE,GAAGE,KAAK,CAACC,MAAD,CAAhB;;EAD6D,kCAApBU,QAAoB;IAApBA,QAAoB,UAApBA,GAAoBC,eAApBD;EAAoB;;EAE7D,OAAOA,QAAQ,CAACE,GAATF,CAAcT,MAAD,IAAeA,MAAf,MAAeA,GAAUJ,EAAtCa,CAAP;AACD","names":["React","useSafeLayoutEffect","handoffComplete","id","genId","useId","idProp","prefix","initialId","uid","setUid","useState","useEffect","toString","undefined","useIds","prefixes","arguments","map"],"sources":["../../src/use-id.ts"],"sourcesContent":["import * as React from \"react\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\n\n/**\n * Credit: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n */\nlet handoffComplete = false\nlet id = 0\nconst genId = () => ++id\n\n/**\n * Reack hook to generate unique id\n *\n * @param idProp the external id passed from the user\n * @param prefix prefix to append before the id\n */\nexport function useId(idProp?: string, prefix?: string) {\n  const initialId = idProp || (handoffComplete ? genId() : null)\n  const [uid, setUid] = React.useState(initialId)\n\n  useSafeLayoutEffect(() => {\n    if (uid === null) setUid(genId())\n  }, [])\n\n  React.useEffect(() => {\n    if (handoffComplete === false) {\n      handoffComplete = true\n    }\n  }, [])\n\n  const id = uid != null ? uid.toString() : undefined\n  return (prefix ? `${prefix}-${id}` : id) as string\n}\n\n/**\n * Reack hook to generate ids for use in compound components\n *\n * @param idProp the external id passed from the user\n * @param prefixes array of prefixes to use\n *\n * @example\n *\n * ```js\n * const [buttonId, menuId] = useIds(\"52\", \"button\", \"menu\")\n *\n * // buttonId will be `button-52`\n * // menuId will be `menu-52`\n * ```\n */\nexport function useIds(idProp?: string, ...prefixes: string[]) {\n  const id = useId(idProp)\n  return prefixes.map((prefix) => `${prefix}-${id}`)\n}\n"]},"metadata":{},"sourceType":"module"}