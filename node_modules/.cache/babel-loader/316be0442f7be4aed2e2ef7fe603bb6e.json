{"ast":null,"code":"import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\";\nvar parts = [\"container\", \"title\", \"description\", \"icon\"];\nvar baseStyle = {\n  container: {\n    px: 4,\n    py: 3\n  },\n  title: {\n    fontWeight: \"bold\",\n    lineHeight: 6,\n    mr: 2\n  },\n  description: {\n    lineHeight: 6\n  },\n  icon: {\n    flexShrink: 0,\n    mr: 3,\n    w: 5,\n    h: 6\n  }\n};\n\nfunction getBg(props) {\n  var {\n    theme,\n    colorScheme: c\n  } = props;\n  var lightBg = getColor(theme, c + \".100\", c);\n  var darkBg = transparentize(c + \".200\", 0.16)(theme);\n  return mode(lightBg, darkBg)(props);\n}\n\nfunction variantSubtle(props) {\n  var {\n    colorScheme: c\n  } = props;\n  return {\n    container: {\n      bg: getBg(props)\n    },\n    icon: {\n      color: mode(c + \".500\", c + \".200\")(props)\n    }\n  };\n}\n\nfunction variantLeftAccent(props) {\n  var {\n    colorScheme: c\n  } = props;\n  return {\n    container: {\n      pl: 3,\n      borderLeftWidth: \"4px\",\n      borderLeftColor: mode(c + \".500\", c + \".200\")(props),\n      bg: getBg(props)\n    },\n    icon: {\n      color: mode(c + \".500\", c + \".200\")(props)\n    }\n  };\n}\n\nfunction variantTopAccent(props) {\n  var {\n    colorScheme: c\n  } = props;\n  return {\n    container: {\n      pt: 2,\n      borderTopWidth: \"4px\",\n      borderTopColor: mode(c + \".500\", c + \".200\")(props),\n      bg: getBg(props)\n    },\n    icon: {\n      color: mode(c + \".500\", c + \".200\")(props)\n    }\n  };\n}\n\nfunction variantSolid(props) {\n  var {\n    colorScheme: c\n  } = props;\n  return {\n    container: {\n      bg: mode(c + \".500\", c + \".200\")(props),\n      color: mode(\"white\", \"gray.900\")(props)\n    }\n  };\n}\n\nvar variants = {\n  subtle: variantSubtle,\n  \"left-accent\": variantLeftAccent,\n  \"top-accent\": variantTopAccent,\n  solid: variantSolid\n};\nvar defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"blue\"\n};\nexport default {\n  parts,\n  baseStyle,\n  variants,\n  defaultProps\n};","map":{"version":3,"mappings":"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","names":["getColor","mode","transparentize","parts","baseStyle","container","px","py","title","fontWeight","lineHeight","mr","description","icon","flexShrink","w","h","getBg","props","theme","colorScheme","c","lightBg","darkBg","variantSubtle","bg","color","variantLeftAccent","pl","borderLeftWidth","borderLeftColor","variantTopAccent","pt","borderTopWidth","borderTopColor","variantSolid","variants","subtle","solid","defaultProps","variant"],"sources":["../../../src/components/alert.ts"],"sourcesContent":["import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\"\n\ntype Dict = Record<string, any>\n\nconst parts = [\"container\", \"title\", \"description\", \"icon\"]\n\nconst baseStyle = {\n  container: {\n    px: 4,\n    py: 3,\n  },\n  title: {\n    fontWeight: \"bold\",\n    lineHeight: 6,\n    mr: 2,\n  },\n  description: {\n    lineHeight: 6,\n  },\n  icon: {\n    flexShrink: 0,\n    mr: 3,\n    w: 5,\n    h: 6,\n  },\n}\n\nfunction getBg(props: Dict) {\n  const { theme, colorScheme: c } = props\n  const lightBg = getColor(theme, `${c}.100`, c)\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme)\n  return mode(lightBg, darkBg)(props)\n}\n\nfunction variantSubtle(props: Dict) {\n  const { colorScheme: c } = props\n  return {\n    container: { bg: getBg(props) },\n    icon: { color: mode(`${c}.500`, `${c}.200`)(props) },\n  }\n}\n\nfunction variantLeftAccent(props: Dict) {\n  const { colorScheme: c } = props\n  return {\n    container: {\n      pl: 3,\n      borderLeftWidth: \"4px\",\n      borderLeftColor: mode(`${c}.500`, `${c}.200`)(props),\n      bg: getBg(props),\n    },\n    icon: {\n      color: mode(`${c}.500`, `${c}.200`)(props),\n    },\n  }\n}\n\nfunction variantTopAccent(props: Dict) {\n  const { colorScheme: c } = props\n  return {\n    container: {\n      pt: 2,\n      borderTopWidth: \"4px\",\n      borderTopColor: mode(`${c}.500`, `${c}.200`)(props),\n      bg: getBg(props),\n    },\n    icon: {\n      color: mode(`${c}.500`, `${c}.200`)(props),\n    },\n  }\n}\n\nfunction variantSolid(props: Dict) {\n  const { colorScheme: c } = props\n  return {\n    container: {\n      bg: mode(`${c}.500`, `${c}.200`)(props),\n      color: mode(`white`, `gray.900`)(props),\n    },\n  }\n}\n\nconst variants = {\n  subtle: variantSubtle,\n  \"left-accent\": variantLeftAccent,\n  \"top-accent\": variantTopAccent,\n  solid: variantSolid,\n}\n\nconst defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"blue\",\n}\n\nexport default {\n  parts,\n  baseStyle,\n  variants,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}