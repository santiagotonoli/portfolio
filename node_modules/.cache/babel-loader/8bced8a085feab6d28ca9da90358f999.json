{"ast":null,"code":"import { t } from \"../utils\";\nexport var layout = {\n  width: t.sizesT(\"width\"),\n  inlineSize: t.sizesT(\"inlineSize\"),\n  height: t.sizes(\"height\"),\n  blockSize: t.sizes(\"blockSize\"),\n  boxSize: t.sizes([\"width\", \"height\"]),\n  minWidth: t.sizes(\"minWidth\"),\n  minInlineSize: t.sizes(\"minInlineSize\"),\n  minHeight: t.sizes(\"minHeight\"),\n  minBlockSize: t.sizes(\"minBlockSize\"),\n  maxWidth: t.sizes(\"maxWidth\"),\n  maxInlineSize: t.sizes(\"maxInlineSize\"),\n  maxHeight: t.sizes(\"maxHeight\"),\n  maxBlockSize: t.sizes(\"maxBlockSize\"),\n  d: t.prop(\"display\"),\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n  boxSizing: true\n};\nObject.assign(layout, {\n  w: layout.width,\n  h: layout.height,\n  minW: layout.minWidth,\n  maxW: layout.maxWidth,\n  minH: layout.minHeight,\n  maxH: layout.maxHeight\n});\n/**\n * Types for layout related CSS properties\n */","map":{"version":3,"mappings":"AAEA,SAAiBA,CAAjB,QAAiC,UAAjC;AAEA,OAAO,IAAMC,MAAc,GAAG;EAC5BC,KAAK,EAAEF,CAAC,CAACG,MAAFH,CAAS,OAATA,CADqB;EAE5BI,UAAU,EAAEJ,CAAC,CAACG,MAAFH,CAAS,YAATA,CAFgB;EAG5BK,MAAM,EAAEL,CAAC,CAACM,KAAFN,CAAQ,QAARA,CAHoB;EAI5BO,SAAS,EAAEP,CAAC,CAACM,KAAFN,CAAQ,WAARA,CAJiB;EAK5BQ,OAAO,EAAER,CAAC,CAACM,KAAFN,CAAQ,CAAC,OAAD,EAAU,QAAV,CAARA,CALmB;EAM5BS,QAAQ,EAAET,CAAC,CAACM,KAAFN,CAAQ,UAARA,CANkB;EAO5BU,aAAa,EAAEV,CAAC,CAACM,KAAFN,CAAQ,eAARA,CAPa;EAQ5BW,SAAS,EAAEX,CAAC,CAACM,KAAFN,CAAQ,WAARA,CARiB;EAS5BY,YAAY,EAAEZ,CAAC,CAACM,KAAFN,CAAQ,cAARA,CATc;EAU5Ba,QAAQ,EAAEb,CAAC,CAACM,KAAFN,CAAQ,UAARA,CAVkB;EAW5Bc,aAAa,EAAEd,CAAC,CAACM,KAAFN,CAAQ,eAARA,CAXa;EAY5Be,SAAS,EAAEf,CAAC,CAACM,KAAFN,CAAQ,WAARA,CAZiB;EAa5BgB,YAAY,EAAEhB,CAAC,CAACM,KAAFN,CAAQ,cAARA,CAbc;EAc5BiB,CAAC,EAAEjB,CAAC,CAACkB,IAAFlB,CAAO,SAAPA,CAdyB;EAe5BmB,QAAQ,EAAE,IAfkB;EAgB5BC,SAAS,EAAE,IAhBiB;EAiB5BC,SAAS,EAAE,IAjBiB;EAkB5BC,OAAO,EAAE,IAlBmB;EAmB5BC,aAAa,EAAE,IAnBa;EAoB5BC,SAAS,EAAE;AApBiB,CAAvB;AAuBPC,MAAM,CAACC,MAAPD,CAAcxB,MAAdwB,EAAsB;EACpBE,CAAC,EAAE1B,MAAM,CAACC,KADU;EAEpB0B,CAAC,EAAE3B,MAAM,CAACI,MAFU;EAGpBwB,IAAI,EAAE5B,MAAM,CAACQ,QAHO;EAIpBqB,IAAI,EAAE7B,MAAM,CAACY,QAJO;EAKpBkB,IAAI,EAAE9B,MAAM,CAACU,SALO;EAMpBqB,IAAI,EAAE/B,MAAM,CAACc;AANO,CAAtBU;AASA;AACA;AACA","names":["t","layout","width","sizesT","inlineSize","height","sizes","blockSize","boxSize","minWidth","minInlineSize","minHeight","minBlockSize","maxWidth","maxInlineSize","maxHeight","maxBlockSize","d","prop","overflow","overflowX","overflowY","display","verticalAlign","boxSizing","Object","assign","w","h","minW","maxW","minH","maxH"],"sources":["../../../src/config/layout.ts"],"sourcesContent":["import * as CSS from \"csstype\"\nimport { Config } from \"../prop-config\"\nimport { Length, t, Token } from \"../utils\"\n\nexport const layout: Config = {\n  width: t.sizesT(\"width\"),\n  inlineSize: t.sizesT(\"inlineSize\"),\n  height: t.sizes(\"height\"),\n  blockSize: t.sizes(\"blockSize\"),\n  boxSize: t.sizes([\"width\", \"height\"]),\n  minWidth: t.sizes(\"minWidth\"),\n  minInlineSize: t.sizes(\"minInlineSize\"),\n  minHeight: t.sizes(\"minHeight\"),\n  minBlockSize: t.sizes(\"minBlockSize\"),\n  maxWidth: t.sizes(\"maxWidth\"),\n  maxInlineSize: t.sizes(\"maxInlineSize\"),\n  maxHeight: t.sizes(\"maxHeight\"),\n  maxBlockSize: t.sizes(\"maxBlockSize\"),\n  d: t.prop(\"display\"),\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n  boxSizing: true,\n}\n\nObject.assign(layout, {\n  w: layout.width,\n  h: layout.height,\n  minW: layout.minWidth,\n  maxW: layout.maxWidth,\n  minH: layout.minHeight,\n  maxH: layout.maxHeight,\n})\n\n/**\n * Types for layout related CSS properties\n */\nexport interface LayoutProps {\n  /**\n   * The CSS `display` property\n   */\n  display?: Token<CSS.Property.Display>\n  /**\n   * The CSS `display` property\n   */\n  d?: Token<CSS.Property.Display>\n  /**\n   * The CSS `width` property\n   */\n  width?: Token<CSS.Property.Width | number, \"sizes\">\n  /**\n   * The CSS `width` property\n   */\n  w?: Token<CSS.Property.Width | number, \"sizes\">\n  inlineSize?: Token<CSS.Property.InlineSize | number, \"sizes\">\n  /**\n   * The CSS `width` and `height` property\n   */\n  boxSize?: Token<CSS.Property.Width | number, \"sizes\">\n  /**\n   * The CSS `max-width` property\n   */\n  maxWidth?: Token<CSS.Property.MaxWidth | number, \"sizes\">\n  /**\n   * The CSS `max-width` property\n   */\n  maxW?: Token<CSS.Property.MaxWidth | number, \"sizes\">\n  maxInlineSize?: Token<CSS.Property.MaxInlineSize | number, \"sizes\">\n  /**\n   * The CSS `min-width` property\n   */\n  minWidth?: Token<CSS.Property.MinWidth | number, \"sizes\">\n  /**\n   * The CSS `min-width` property\n   */\n  minW?: Token<CSS.Property.MinWidth | number, \"sizes\">\n  minInlineSize?: Token<CSS.Property.MinInlineSize | number, \"sizes\">\n  /**\n   * The CSS `height` property\n   */\n  height?: Token<CSS.Property.Height | number, \"sizes\">\n  /**\n   * The CSS `height` property\n   */\n  h?: Token<CSS.Property.Height | number, \"sizes\">\n  blockSize?: Token<CSS.Property.BlockSize | number, \"sizes\">\n  /**\n   * The CSS `max-height` property\n   */\n  maxHeight?: Token<CSS.Property.MaxHeight | number, \"sizes\">\n  /**\n   * The CSS `max-height` property\n   */\n  maxH?: Token<CSS.Property.MaxHeight | number, \"sizes\">\n  maxBlockSize?: Token<CSS.Property.MaxBlockSize | number, \"sizes\">\n  /**\n   * The CSS `min-height` property\n   */\n  minHeight?: Token<CSS.Property.MinHeight | number, \"sizes\">\n  /**\n   * The CSS `min-height` property\n   */\n  minH?: Token<CSS.Property.MinHeight | number, \"sizes\">\n  minBlockSize?: Token<CSS.Property.MinBlockSize | number, \"sizes\">\n  /**\n   * The CSS `vertical-align` property\n   */\n  verticalAlign?: Token<CSS.Property.VerticalAlign<Length>>\n  /**\n   * The CSS `overflow` property\n   */\n  overflow?: Token<CSS.Property.Overflow>\n  /**\n   * The CSS `overflow-x` property\n   */\n  overflowX?: Token<CSS.Property.OverflowX>\n  /**\n   * The CSS `overflow-y` property\n   */\n  overflowY?: Token<CSS.Property.OverflowY>\n  /**\n   * The CSS `box-sizing` property\n   */\n  boxSizing?: CSS.Property.BoxSizing\n}\n"]},"metadata":{},"sourceType":"module"}