{"ast":null,"code":"import { useContext, useEffect } from 'react';\nimport { __assign } from 'tslib';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\nimport { VisualElementDragControls } from './VisualElementDragControls.js';\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\n\nfunction useDrag(props, visualElement) {\n  var groupDragControls = props.dragControls;\n  var transformPagePoint = useContext(MotionConfigContext).transformPagePoint;\n  var dragControls = useConstant(function () {\n    return new VisualElementDragControls({\n      visualElement: visualElement\n    });\n  });\n  dragControls.setProps(__assign(__assign({}, props), {\n    transformPagePoint: transformPagePoint\n  })); // If we've been provided a DragControls for manual control over the drag gesture,\n  // subscribe this component to it on mount.\n\n  useEffect(function () {\n    return groupDragControls && groupDragControls.subscribe(dragControls);\n  }, [dragControls]); // Mount the drag controls with the visualElement\n\n  useEffect(function () {\n    return dragControls.mount(visualElement);\n  }, []);\n}\n\nexport { useDrag };","map":{"version":3,"names":["useContext","useEffect","__assign","MotionConfigContext","useConstant","VisualElementDragControls","useDrag","props","visualElement","groupDragControls","dragControls","transformPagePoint","setProps","subscribe","mount"],"sources":["/Users/santiagotonoli/Desktop/Portfolio/node_modules/framer-motion/dist/es/gestures/drag/use-drag.js"],"sourcesContent":["import { useContext, useEffect } from 'react';\nimport { __assign } from 'tslib';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\nimport { VisualElementDragControls } from './VisualElementDragControls.js';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props, visualElement) {\n    var groupDragControls = props.dragControls;\n    var transformPagePoint = useContext(MotionConfigContext).transformPagePoint;\n    var dragControls = useConstant(function () {\n        return new VisualElementDragControls({\n            visualElement: visualElement,\n        });\n    });\n    dragControls.setProps(__assign(__assign({}, props), { transformPagePoint: transformPagePoint }));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls]);\n    // Mount the drag controls with the visualElement\n    useEffect(function () { return dragControls.mount(visualElement); }, []);\n}\n\nexport { useDrag };\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,sCAApC;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,aAAxB,EAAuC;EACnC,IAAIC,iBAAiB,GAAGF,KAAK,CAACG,YAA9B;EACA,IAAIC,kBAAkB,GAAGX,UAAU,CAACG,mBAAD,CAAV,CAAgCQ,kBAAzD;EACA,IAAID,YAAY,GAAGN,WAAW,CAAC,YAAY;IACvC,OAAO,IAAIC,yBAAJ,CAA8B;MACjCG,aAAa,EAAEA;IADkB,CAA9B,CAAP;EAGH,CAJ6B,CAA9B;EAKAE,YAAY,CAACE,QAAb,CAAsBV,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKK,KAAL,CAAT,EAAsB;IAAEI,kBAAkB,EAAEA;EAAtB,CAAtB,CAA9B,EARmC,CASnC;EACA;;EACAV,SAAS,CAAC,YAAY;IAAE,OAAOQ,iBAAiB,IAAIA,iBAAiB,CAACI,SAAlB,CAA4BH,YAA5B,CAA5B;EAAwE,CAAvF,EAAyF,CAACA,YAAD,CAAzF,CAAT,CAXmC,CAYnC;;EACAT,SAAS,CAAC,YAAY;IAAE,OAAOS,YAAY,CAACI,KAAb,CAAmBN,aAAnB,CAAP;EAA2C,CAA1D,EAA4D,EAA5D,CAAT;AACH;;AAED,SAASF,OAAT"},"metadata":{},"sourceType":"module"}