{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/docs/layout/flex\n */\n\nexport var Flex = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n    direction,\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"direction\", \"align\", \"justify\", \"wrap\", \"basis\", \"grow\", \"shrink\"]);\n\n  var styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\n\nif (__DEV__) {\n  Flex.displayName = \"Flex\";\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SACEA,MADF,EAEEC,UAFF,QAKO,mBALP;AAMA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,IAAI,gBAAGH,UAAU,CAAmB,CAACI,KAAD,EAAQC,GAAR,KAAgB;EAC/D,IAAM;IACJC,SADI;IAEJC,KAFI;IAGJC,OAHI;IAIJC,IAJI;IAKJC,KALI;IAMJC,IANI;IAOJC;EAPI,IASFR,KATJ;EAAA,IAQKS,IARL,iCASIT,KATJ;;EAWA,IAAMU,MAAM,GAAG;IACbC,OAAO,EAAE,MADI;IAEbC,aAAa,EAAEV,SAFF;IAGbW,UAAU,EAAEV,KAHC;IAIbW,cAAc,EAAEV,OAJH;IAKbW,QAAQ,EAAEV,IALG;IAMbW,SAAS,EAAEV,KANE;IAObW,QAAQ,EAAEV,IAPG;IAQbW,UAAU,EAAEV;EARC,CAAf;EAWA,oBAAOV,oBAACH,MAAD,CAAQwB,GAAR;IAAYlB,GAAG,EAAEA,GAAjB;IAAsBmB,KAAK,EAAEV;EAA7B,GAAyCD,IAAzC,EAAP;AAvB4B,EAAvB;;AA0BP,IAAIZ,OAAJ,EAAa;EACXE,IAAI,CAACsB,WAALtB,GAAmB,MAAnBA;AACD","names":["chakra","forwardRef","__DEV__","React","Flex","props","ref","direction","align","justify","wrap","basis","grow","shrink","rest","styles","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","div","__css","displayName"],"sources":["../../src/flex.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/docs/layout/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">((props, ref) => {\n  const {\n    direction,\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nif (__DEV__) {\n  Flex.displayName = \"Flex\"\n}\n"]},"metadata":{},"sourceType":"module"}