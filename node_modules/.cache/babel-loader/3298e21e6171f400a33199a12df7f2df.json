{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { cx, getValidChildren, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component that separates each breadcrumb link\n */\n\nexport var BreadcrumbSeparator = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n    spacing\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"spacing\"]);\n\n  var styles = useStyles();\n\n  var separatorStyles = _extends({\n    mx: spacing\n  }, styles.separator);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\n\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\n\n\nexport var BreadcrumbLink = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n    isCurrentPage,\n    as,\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"isCurrentPage\", \"as\", \"className\"]);\n\n  var styles = useStyles();\n\n  var sharedProps = _extends({\n    ref,\n    as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n\n  if (isCurrentPage) {\n    return /*#__PURE__*/React.createElement(chakra.span, _extends({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    __css: styles.link\n  }, sharedProps));\n});\n\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/docs/components/breadcrumbs\n */\n\n\nexport var BreadcrumbItem = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n    isCurrentPage,\n    separator,\n    isLastChild,\n    spacing,\n    children,\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"]);\n\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(child => {\n    if (child.type === BreadcrumbLink) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isCurrentPage\n      });\n    }\n\n    if (child.type === BreadcrumbSeparator) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        spacing,\n        children: child.props.children || separator\n      });\n    }\n\n    return child;\n  });\n  var styles = useStyles();\n\n  var itemStyles = _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: itemStyles\n  }), clones, !isLastChild && /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\n\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\";\n}\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/docs/components/breadcrumbs\n */\n\n\nexport var Breadcrumb = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n\n  var {\n    children,\n    spacing = \"0.5rem\",\n    separator = \"/\",\n    className\n  } = ownProps,\n      rest = _objectWithoutPropertiesLoose(ownProps, [\"children\", \"spacing\", \"separator\", \"className\"]);\n\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map((child, index) => /*#__PURE__*/React.cloneElement(child, {\n    separator,\n    spacing,\n    isLastChild: count === index + 1\n  }));\n\n  var _className = cx(\"chakra-breadcrumb\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.nav, _extends({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\n\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}","map":{"version":3,"mappings":"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","names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","getValidChildren","__DEV__","React","BreadcrumbSeparator","props","ref","spacing","rest","styles","separatorStyles","mx","separator","span","role","__css","displayName","BreadcrumbLink","isCurrentPage","as","className","sharedProps","link","a","BreadcrumbItem","isLastChild","children","validChildren","clones","map","child","type","cloneElement","itemStyles","display","alignItems","item","_className","li","Breadcrumb","ownProps","count","length","index","nav","container","value","ol"],"sources":["../../src/breadcrumb.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, getValidChildren, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface BreadcrumbSeparatorProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * @type SystemProps[\"mx\"]\n   */\n  spacing?: SystemProps[\"mx\"]\n}\n\n/**\n * React component that separates each breadcrumb link\n */\nexport const BreadcrumbSeparator = forwardRef<BreadcrumbSeparatorProps, \"span\">(\n  (props, ref) => {\n    const { spacing, ...rest } = props\n\n    const styles = useStyles()\n    const separatorStyles: SystemStyleObject = {\n      mx: spacing,\n      ...styles.separator,\n    }\n\n    return (\n      <chakra.span\n        ref={ref}\n        role=\"presentation\"\n        {...rest}\n        __css={separatorStyles}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n}\n\nexport interface BreadcrumbLinkProps extends HTMLChakraProps<\"a\"> {\n  isCurrentPage?: boolean\n}\n\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\nexport const BreadcrumbLink = forwardRef<BreadcrumbLinkProps, \"a\">(\n  (props, ref) => {\n    const { isCurrentPage, as, className, ...rest } = props\n    const styles = useStyles()\n\n    const sharedProps = {\n      ref,\n      as,\n      className: cx(\"chakra-breadcrumb__link\", className),\n      ...rest,\n    }\n\n    if (isCurrentPage) {\n      return (\n        <chakra.span aria-current=\"page\" __css={styles.link} {...sharedProps} />\n      )\n    }\n\n    return <chakra.a __css={styles.link} {...sharedProps} />\n  },\n)\n\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\"\n}\n\ninterface BreadcrumbItemOptions extends BreadcrumbOptions {\n  isCurrentPage?: boolean\n  isLastChild?: boolean\n}\n\nexport interface BreadcrumbItemProps\n  extends BreadcrumbItemOptions,\n    HTMLChakraProps<\"li\"> {}\n\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/docs/components/breadcrumbs\n */\nexport const BreadcrumbItem = forwardRef<BreadcrumbItemProps, \"li\">(\n  (props, ref) => {\n    const {\n      isCurrentPage,\n      separator,\n      isLastChild,\n      spacing,\n      children,\n      className,\n      ...rest\n    } = props\n\n    const validChildren = getValidChildren(children)\n\n    const clones = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return React.cloneElement(child, {\n          isCurrentPage,\n        })\n      }\n\n      if (child.type === BreadcrumbSeparator) {\n        return React.cloneElement(child, {\n          spacing,\n          children: child.props.children || separator,\n        })\n      }\n\n      return child\n    })\n\n    const styles = useStyles()\n    const itemStyles: SystemStyleObject = {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      ...styles.item,\n    }\n\n    const _className = cx(\"chakra-breadcrumb__list-item\", className)\n\n    return (\n      <chakra.li ref={ref} className={_className} {...rest} __css={itemStyles}>\n        {clones}\n        {!isLastChild && (\n          <BreadcrumbSeparator spacing={spacing}>\n            {separator}\n          </BreadcrumbSeparator>\n        )}\n      </chakra.li>\n    )\n  },\n)\n\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\"\n}\n\nexport interface BreadcrumbOptions {\n  /**\n   * The visual separator between each breadcrumb item\n   * @type string | React.ReactElement\n   */\n  separator?: string | React.ReactElement\n  /**\n   * The left and right margin applied to the separator\n   * @type SystemProps[\"mx\"]\n   */\n  spacing?: SystemProps[\"mx\"]\n}\n\nexport interface BreadcrumbProps\n  extends HTMLChakraProps<\"nav\">,\n    BreadcrumbOptions,\n    ThemingProps<\"Breadcrumb\"> {}\n\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/docs/components/breadcrumbs\n */\nexport const Breadcrumb = forwardRef<BreadcrumbProps, \"nav\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Breadcrumb\", props)\n  const ownProps = omitThemingProps(props)\n\n  const {\n    children,\n    spacing = \"0.5rem\",\n    separator = \"/\",\n    className,\n    ...rest\n  } = ownProps\n\n  const validChildren = getValidChildren(children)\n  const count = validChildren.length\n\n  const clones = validChildren.map((child, index) =>\n    React.cloneElement(child, {\n      separator,\n      spacing,\n      isLastChild: count === index + 1,\n    }),\n  )\n\n  const _className = cx(\"chakra-breadcrumb\", className)\n\n  return (\n    <chakra.nav\n      ref={ref}\n      aria-label=\"breadcrumb\"\n      className={_className}\n      __css={styles.container}\n      {...rest}\n    >\n      <StylesProvider value={styles}>\n        <chakra.ol className=\"chakra-breadcrumb__list\">{clones}</chakra.ol>\n      </StylesProvider>\n    </chakra.nav>\n  )\n})\n\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\"\n}\n"]},"metadata":{},"sourceType":"module"}