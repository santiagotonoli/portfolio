{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { cx, warn, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { EASINGS } from \"./__utils\";\n\nvar hasHeightValue = value => value != null && parseInt(value.toString(), 10) > 0;\n\nvar variants = {\n  exit: props => _extends({}, props.animateOpacity && {\n    opacity: hasHeightValue(props.startingHeight) ? 1 : 0\n  }, {\n    height: props.startingHeight,\n    transition: {\n      height: {\n        duration: 0.2,\n        ease: EASINGS.ease\n      },\n      opacity: {\n        duration: 0.3,\n        ease: EASINGS.ease\n      }\n    }\n  }),\n  enter: props => _extends({}, props.animateOpacity && {\n    opacity: 1\n  }, {\n    height: props.endingHeight,\n    transition: {\n      height: {\n        duration: 0.3,\n        ease: EASINGS.ease\n      },\n      opacity: {\n        duration: 0.4,\n        ease: EASINGS.ease\n      }\n    }\n  })\n};\nexport var Collapse = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    in: isOpen,\n    unmountOnExit,\n    animateOpacity = true,\n    startingHeight = 0,\n    endingHeight = \"auto\",\n    style,\n    className,\n    onAnimationComplete: _onAnimationComplete\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"in\", \"unmountOnExit\", \"animateOpacity\", \"startingHeight\", \"endingHeight\", \"style\", \"className\", \"onAnimationComplete\"]);\n\n  var fromZeroHeight = startingHeight === 0;\n  var [open, setOpen] = React.useState(!!isOpen);\n\n  var getInitialHidden = () => {\n    // If it is open by default, no need to apply `aria-hidden`\n    if (isOpen) return false; // If startingHeight > 0, then content is partially visible\n\n    if (hasHeightValue(startingHeight)) return false; // Else, the content is hidden\n\n    return true;\n  };\n\n  var [display, setDisplay] = React.useState(() => {\n    if (!fromZeroHeight) return \"block\";\n    var hidden = getInitialHidden();\n    return hidden ? \"none\" : \"block\";\n  });\n  useUpdateEffect(() => {\n    setDisplay(\"block\");\n    setOpen(!!isOpen);\n  }, [isOpen]);\n  /**\n   * Warn ðŸš¨: `startingHeight` and `unmountOnExit` are mutually exclusive\n   *\n   * If you specify a starting height, the collapsed needs to be mounted\n   * for the height to take effect.\n   */\n\n  if (startingHeight > 0 && unmountOnExit) {\n    warn(\"startingHeight and unmountOnExit are mutually exclusive. You can't use them together\");\n  }\n\n  var custom = {\n    startingHeight,\n    endingHeight,\n    animateOpacity\n  };\n\n  var ownProps = _extends({\n    ref,\n    // @future: set parameter as `definition` when we remove `framer-motion`\n    // v3 support\n    onAnimationComplete: definition => {\n      if (!open && fromZeroHeight) {\n        setDisplay(\"none\");\n      } // @future: remove `any` cast when we remove `framer-motion` v3 support\n\n\n      ;\n      _onAnimationComplete == null ? void 0 : _onAnimationComplete(definition);\n    },\n    className: cx(\"chakra-collapse\", className)\n  }, rest, {\n    variants,\n    style: _extends({\n      overflow: \"hidden\"\n    }, style),\n    custom\n  });\n\n  if (unmountOnExit) {\n    return /*#__PURE__*/React.createElement(AnimatePresence, {\n      initial: false,\n      custom: custom\n    }, isOpen && /*#__PURE__*/React.createElement(motion.div, _extends({}, ownProps, {\n      initial: \"exit\",\n      animate: \"enter\",\n      exit: \"exit\"\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(motion.div, _extends({}, ownProps, {\n    style: _extends({}, ownProps.style, {\n      display\n    }),\n    initial: false,\n    animate: open ? \"enter\" : \"exit\"\n  }));\n});\n\nif (__DEV__) {\n  Collapse.displayName = \"Collapse\";\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,SAASC,EAAT,EAAaC,IAAb,EAAmBC,OAAnB,QAAkC,kBAAlC;AACA,SAASC,eAAT,EAA2CC,MAA3C,QAAyD,eAAzD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwC,WAAxC;;AAIA,IAAMC,cAAc,GAAIC,KAAD,IACrBA,KAAK,IAAI,IAATA,IAAiBC,QAAQ,CAACD,KAAK,CAACE,QAANF,EAAD,EAAmB,EAAnB,CAARC,GAAiC,CADpD;;AAGA,IAAME,QAA0B,GAAG;EACjCC,IAAI,EAAGC,KAAD,iBACAA,KAAK,CAACC,cAAND,IAAwB;IAC1BE,OAAO,EAAER,cAAc,CAACM,KAAK,CAACG,cAAP,CAAdT,GAAuC,CAAvCA,GAA2C;EAD1B,CADxB;IAIJU,MAAM,EAAEJ,KAAK,CAACG,cAJV;IAKJE,UAAU,EAAE;MACVD,MAAM,EAAE;QAAEE,QAAQ,EAAE,GAAZ;QAAiBC,IAAI,EAAEd,OAAO,CAACc;MAA/B,CADE;MAEVL,OAAO,EAAE;QAAEI,QAAQ,EAAE,GAAZ;QAAiBC,IAAI,EAAEd,OAAO,CAACc;MAA/B;IAFC;EALR,EAD2B;EAWjCC,KAAK,EAAGR,KAAD,iBACDA,KAAK,CAACC,cAAND,IAAwB;IAC1BE,OAAO,EAAE;EADiB,CADvB;IAILE,MAAM,EAAEJ,KAAK,CAACS,YAJT;IAKLJ,UAAU,EAAE;MACVD,MAAM,EAAE;QACNE,QAAQ,EAAE,GADJ;QAENC,IAAI,EAAEd,OAAO,CAACc;MAFR,CADE;MAKVL,OAAO,EAAE;QACPI,QAAQ,EAAE,GADH;QAEPC,IAAI,EAAEd,OAAO,CAACc;MAFP;IALC;EALP;AAX0B,CAAnC;AA+DA,OAAO,IAAMG,QAAQ,gBAAGlB,KAAK,CAACmB,UAANnB,CACtB,CAACQ,KAAD,EAAQY,GAAR,KAAgB;EACd,IAAM;IACJC,EAAE,EAAEC,MADA;IAEJC,aAFI;IAGJd,cAAc,GAAG,IAHb;IAIJE,cAAc,GAAG,CAJb;IAKJM,YAAY,GAAG,MALX;IAMJO,KANI;IAOJC,SAPI;IAQJC,mBAAmB,EAAnBA;EARI,IAUFlB,KAVJ;EAAA,IASKmB,IATL,iCAUInB,KAVJ;;EAYA,IAAMoB,cAAc,GAAGjB,cAAc,KAAK,CAA1C;EAEA,IAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkB9B,KAAK,CAAC+B,QAAN/B,CAAe,CAAC,CAACsB,MAAjBtB,CAAxB;;EAEA,IAAMgC,gBAAgB,GAAG,MAAM;IAC7B;IACA,IAAIV,MAAJ,EAAY,OAAO,KAAP,CAFiB,CAG7B;;IACA,IAAIpB,cAAc,CAACS,cAAD,CAAlB,EAAoC,OAAO,KAAP,CAJP,CAK7B;;IACA,OAAO,IAAP;EANF;;EASA,IAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBlC,KAAK,CAAC+B,QAAN/B,CAAwB,MAAM;IAC1D,IAAI,CAAC4B,cAAL,EAAqB,OAAO,OAAP;IACrB,IAAMO,MAAM,GAAGH,gBAAgB,EAA/B;IACA,OAAOG,MAAM,GAAG,MAAH,GAAY,OAAzB;EAH4B,EAA9B;EAMAzC,eAAe,CAAC,MAAM;IACpBwC,UAAU,CAAC,OAAD,CAAVA;IACAJ,OAAO,CAAC,CAAC,CAACR,MAAH,CAAPQ;EAFa,GAGZ,CAACR,MAAD,CAHY,CAAf5B;EAKA;AACJ;AACA;AACA;AACA;AACA;;EACI,IAAIiB,cAAc,GAAG,CAAjBA,IAAsBY,aAA1B,EAAyC;IACvC3B,IAAI,wFAAJA;EAGD;;EAED,IAAMwC,MAAM,GAAG;IAAEzB,cAAF;IAAkBM,YAAlB;IAAgCR;EAAhC,CAAf;;EAEA,IAAM4B,QAA2D;IAC/DjB,GAD+D;IAE/D;IACA;IACAM,mBAAmB,EAAGY,UAAD,IAAsB;MACzC,IAAI,CAACT,IAAD,IAASD,cAAb,EAA6B;QAC3BM,UAAU,CAAC,MAAD,CAAVA;MAFuC,EAIzC;;;MACA;MAAER,oBAAD,QAACA,GAAD,MAACA,uBAAD,CAA+BY,UAA/B,CAACZ;IAT2D;IAW/DD,SAAS,EAAE9B,EAAE,CAAC,iBAAD,EAAoB8B,SAApB;EAXkD,GAY5DE,IAZ4D;IAa/DrB,QAb+D;IAc/DkB,KAAK;MAAIe,QAAQ,EAAE;IAAd,GAA2Bf,KAA3B,CAd0D;IAe/DY;EAf+D,EAAjE;;EAkBA,IAAIb,aAAJ,EAAmB;IACjB,oBACEvB,oBAACF,eAAD;MAAiB0C,OAAO,EAAE,KAA1B;MAAiCJ,MAAM,EAAEA;IAAzC,GACGd,MAAM,iBACLtB,oBAACD,MAAD,CAAQ0C,GAAR,eACMJ,QADN;MAEEG,OAAO,EAAC,MAFV;MAGEE,OAAO,EAAC,OAHV;MAIEnC,IAAI,EAAC;IAJP,GAFJ,CADF;EAYD;;EAED,oBACEP,oBAACD,MAAD,CAAQ0C,GAAR,eACMJ,QADN;IAEEb,KAAK,eAAOa,QAAQ,CAACb,KAAhB;MAAuBS;IAAvB,EAFP;IAGEO,OAAO,EAAE,KAHX;IAIEE,OAAO,EAAEb,IAAI,GAAG,OAAH,GAAa;EAJ5B,GADF;AArFoB,EAAjB;;AAgGP,IAAIhC,OAAJ,EAAa;EACXqB,QAAQ,CAACyB,WAATzB,GAAuB,UAAvBA;AACD","names":["useUpdateEffect","cx","warn","__DEV__","AnimatePresence","motion","React","EASINGS","hasHeightValue","value","parseInt","toString","variants","exit","props","animateOpacity","opacity","startingHeight","height","transition","duration","ease","enter","endingHeight","Collapse","forwardRef","ref","in","isOpen","unmountOnExit","style","className","onAnimationComplete","rest","fromZeroHeight","open","setOpen","useState","getInitialHidden","display","setDisplay","hidden","custom","ownProps","definition","overflow","initial","div","animate","displayName"],"sources":["../../src/collapse.tsx"],"sourcesContent":["import { useUpdateEffect } from \"@chakra-ui/hooks\"\nimport { cx, warn, __DEV__ } from \"@chakra-ui/utils\"\nimport { AnimatePresence, HTMLMotionProps, motion } from \"framer-motion\"\nimport * as React from \"react\"\nimport { EASINGS, MotionVariants } from \"./__utils\"\n\ntype CollapseVariants = MotionVariants<\"enter\" | \"exit\">\n\nconst hasHeightValue = (value?: string | number) =>\n  value != null && parseInt(value.toString(), 10) > 0\n\nconst variants: CollapseVariants = {\n  exit: (props: CollapseOptions) => ({\n    ...(props.animateOpacity && {\n      opacity: hasHeightValue(props.startingHeight) ? 1 : 0,\n    }),\n    height: props.startingHeight,\n    transition: {\n      height: { duration: 0.2, ease: EASINGS.ease },\n      opacity: { duration: 0.3, ease: EASINGS.ease },\n    },\n  }),\n  enter: (props: CollapseOptions) => ({\n    ...(props.animateOpacity && {\n      opacity: 1,\n    }),\n    height: props.endingHeight,\n    transition: {\n      height: {\n        duration: 0.3,\n        ease: EASINGS.ease,\n      },\n      opacity: {\n        duration: 0.4,\n        ease: EASINGS.ease,\n      },\n    },\n  }),\n}\n\nexport interface CollapseOptions {\n  /**\n   * If `true`, the opacity of the content will be animated\n   * @default true\n   */\n  animateOpacity?: boolean\n  /**\n   * If `true`, the element will unmount when `in={false}` and animation is done\n   */\n  unmountOnExit?: boolean\n  /**\n   * If `true`, the content will be expanded\n   */\n  in?: boolean\n  /**\n   * The height you want the content in its collapsed state.\n   * @default 0\n   */\n  startingHeight?: number | string\n  /**\n   * The height you want the content in its expanded state.\n   * @default \"auto\"\n   */\n  endingHeight?: number | string\n}\n\nexport type ICollapse = CollapseProps\n\ntype Display = React.CSSProperties[\"display\"]\n\nexport interface CollapseProps\n  extends HTMLMotionProps<\"div\">,\n    CollapseOptions {}\n\nexport const Collapse = React.forwardRef<HTMLDivElement, CollapseProps>(\n  (props, ref) => {\n    const {\n      in: isOpen,\n      unmountOnExit,\n      animateOpacity = true,\n      startingHeight = 0,\n      endingHeight = \"auto\",\n      style,\n      className,\n      onAnimationComplete,\n      ...rest\n    } = props\n\n    const fromZeroHeight = startingHeight === 0\n\n    const [open, setOpen] = React.useState(!!isOpen)\n\n    const getInitialHidden = () => {\n      // If it is open by default, no need to apply `aria-hidden`\n      if (isOpen) return false\n      // If startingHeight > 0, then content is partially visible\n      if (hasHeightValue(startingHeight)) return false\n      // Else, the content is hidden\n      return true\n    }\n\n    const [display, setDisplay] = React.useState<Display>(() => {\n      if (!fromZeroHeight) return \"block\"\n      const hidden = getInitialHidden()\n      return hidden ? \"none\" : \"block\"\n    })\n\n    useUpdateEffect(() => {\n      setDisplay(\"block\")\n      setOpen(!!isOpen)\n    }, [isOpen])\n\n    /**\n     * Warn ðŸš¨: `startingHeight` and `unmountOnExit` are mutually exclusive\n     *\n     * If you specify a starting height, the collapsed needs to be mounted\n     * for the height to take effect.\n     */\n    if (startingHeight > 0 && unmountOnExit) {\n      warn(\n        `startingHeight and unmountOnExit are mutually exclusive. You can't use them together`,\n      )\n    }\n\n    const custom = { startingHeight, endingHeight, animateOpacity }\n\n    const ownProps: HTMLMotionProps<\"div\"> & React.RefAttributes<any> = {\n      ref,\n      // @future: set parameter as `definition` when we remove `framer-motion`\n      // v3 support\n      onAnimationComplete: (definition?: any) => {\n        if (!open && fromZeroHeight) {\n          setDisplay(\"none\")\n        }\n        // @future: remove `any` cast when we remove `framer-motion` v3 support\n        ;(onAnimationComplete as any)?.(definition)\n      },\n      className: cx(\"chakra-collapse\", className),\n      ...rest,\n      variants,\n      style: { overflow: \"hidden\", ...style },\n      custom,\n    }\n\n    if (unmountOnExit) {\n      return (\n        <AnimatePresence initial={false} custom={custom}>\n          {isOpen && (\n            <motion.div\n              {...ownProps}\n              initial=\"exit\"\n              animate=\"enter\"\n              exit=\"exit\"\n            />\n          )}\n        </AnimatePresence>\n      )\n    }\n\n    return (\n      <motion.div\n        {...ownProps}\n        style={{ ...ownProps.style, display }}\n        initial={false}\n        animate={open ? \"enter\" : \"exit\"}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  Collapse.displayName = \"Collapse\"\n}\n"]},"metadata":{},"sourceType":"module"}