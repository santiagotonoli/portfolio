[{"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/index.tsx":"1","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/App.tsx":"2","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/layouts/layout.tsx":"3","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/style/theme.tsx":"4","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/top-nav.tsx":"5","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/footer.tsx":"6","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/Navigation.tsx":"7","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/my-story.tsx":"8","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/achievements.tsx":"9","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/tech-stack.tsx":"10","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/home.tsx":"11","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/blog/notebook-app/notebook-post.tsx":"12","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/repositories-list.tsx":"13","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/blog/posts.tsx":"14","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/about.tsx":"15","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/configs/site-config.js":"16","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/page-transitions.tsx":"17","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/header.tsx":"18","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/motion.tsx":"19","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/projects.tsx":"20","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/skill-card.tsx":"21","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/ColorModeSwitcher.tsx":"22","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/data/projects-list.ts":"23","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/data/data.ts":"24","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/data/posts/articles.ts":"25","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/underlined-text.tsx":"26","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/blog/carousel.tsx":"27","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/project-card.tsx":"28","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/data/posts/notebook-app/images.ts":"29","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/lazy-image.tsx":"30","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/blog/post-card.tsx":"31","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/live-data.tsx":"32","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/offline-data.tsx":"33","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/section.tsx":"34","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/Timeline.tsx":"35","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/story-timeline.tsx":"36","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/live-data-card.tsx":"37","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/card-skeleton.tsx":"38","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/container.tsx":"39","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/offline-data-card.tsx":"40","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/data/repositories.ts":"41"},{"size":278,"mtime":1655114550224,"results":"42","hashOfConfig":"43"},{"size":274,"mtime":1655114550037,"results":"44","hashOfConfig":"43"},{"size":608,"mtime":1655114550224,"results":"45","hashOfConfig":"43"},{"size":4179,"mtime":1655288371544,"results":"46","hashOfConfig":"43"},{"size":6352,"mtime":1655126293191,"results":"47","hashOfConfig":"43"},{"size":1452,"mtime":1655126485567,"results":"48","hashOfConfig":"43"},{"size":1067,"mtime":1655142946016,"results":"49","hashOfConfig":"43"},{"size":2288,"mtime":1655135175105,"results":"50","hashOfConfig":"43"},{"size":2254,"mtime":1655138699045,"results":"51","hashOfConfig":"43"},{"size":7240,"mtime":1655114550222,"results":"52","hashOfConfig":"43"},{"size":4110,"mtime":1655298222811,"results":"53","hashOfConfig":"43"},{"size":7007,"mtime":1655114550217,"results":"54","hashOfConfig":"43"},{"size":2392,"mtime":1655114550221,"results":"55","hashOfConfig":"43"},{"size":848,"mtime":1655114550218,"results":"56","hashOfConfig":"43"},{"size":4805,"mtime":1655114550216,"results":"57","hashOfConfig":"43"},{"size":864,"mtime":1655126838377,"results":"58","hashOfConfig":"43"},{"size":1371,"mtime":1655114550220,"results":"59","hashOfConfig":"43"},{"size":568,"mtime":1655114550218,"results":"60","hashOfConfig":"43"},{"size":1181,"mtime":1655114550220,"results":"61","hashOfConfig":"43"},{"size":1187,"mtime":1655114550221,"results":"62","hashOfConfig":"43"},{"size":2397,"mtime":1655114550221,"results":"63","hashOfConfig":"43"},{"size":1327,"mtime":1655114550037,"results":"64","hashOfConfig":"43"},{"size":5478,"mtime":1655302835775,"results":"65","hashOfConfig":"43"},{"size":7779,"mtime":1655290510192,"results":"66","hashOfConfig":"43"},{"size":5359,"mtime":1655114550223,"results":"67","hashOfConfig":"43"},{"size":459,"mtime":1655114550222,"results":"68","hashOfConfig":"43"},{"size":3929,"mtime":1655114550217,"results":"69","hashOfConfig":"43"},{"size":3508,"mtime":1655304640669,"results":"70","hashOfConfig":"43"},{"size":439,"mtime":1655114550223,"results":"71","hashOfConfig":"43"},{"size":1231,"mtime":1655114550219,"results":"72","hashOfConfig":"43"},{"size":4421,"mtime":1655114550217,"results":"73","hashOfConfig":"43"},{"size":1771,"mtime":1655114550219,"results":"74","hashOfConfig":"43"},{"size":1095,"mtime":1655114550220,"results":"75","hashOfConfig":"43"},{"size":345,"mtime":1655114550221,"results":"76","hashOfConfig":"43"},{"size":1120,"mtime":1655114550216,"results":"77","hashOfConfig":"43"},{"size":2605,"mtime":1655130817799,"results":"78","hashOfConfig":"43"},{"size":3477,"mtime":1655114550219,"results":"79","hashOfConfig":"43"},{"size":1357,"mtime":1655114550218,"results":"80","hashOfConfig":"43"},{"size":261,"mtime":1655114550218,"results":"81","hashOfConfig":"43"},{"size":5847,"mtime":1655114550220,"results":"82","hashOfConfig":"43"},{"size":5612,"mtime":1655114550224,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"b6solg",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/index.tsx",[],["177","178"],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/App.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/layouts/layout.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/style/theme.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/top-nav.tsx",["179"],"import * as React from \"react\";\nimport {\n  Box,\n  Flex,\n  Avatar,\n  HStack,\n  Button,\n  Text,\n  Link,\n  IconButton,\n  useDisclosure,\n  useColorModeValue,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Stack,\n  Icon\n} from \"@chakra-ui/react\";\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { ColorModeSwitcher } from \"ColorModeSwitcher\";\nimport UserIcon from \"assets/images/user_icon.png\";\nimport { AiTwotoneThunderbolt } from \"react-icons/ai\";\nimport { BiChevronDown } from \"react-icons/bi\";\nimport { BsCheckCircle } from \"react-icons/bs\";\nimport { MdTimeline } from \"react-icons/md\";\nimport { BsBook } from \"react-icons/bs\";\n\nconst webLinks = [\n  { name: \"About\", path: \"/about\" },\n];\n\nconst mobileLinks = [\n  { name: \"About\", path: \"/about\" },\n  { name: \"Open Source\", path: \"/open-source\" },\n  { name: \"Tech Stack\", path: \"/tech-stack\" },\n  { name: \"Developer Story\", path: \"/story-timeline\" }\n  \n];\n\ninterface NavLinkProps {\n  index?: string;\n  name: string;\n  path: string;\n  onClose: () => void;\n}\n\nconst NavLink = (props: NavLinkProps) => {\n  return (\n    <Link\n      as={RouterNavLink}\n      px={2}\n      py={1}\n      rounded={\"md\"}\n      _hover={{\n        textDecoration: \"none\",\n        bg: useColorModeValue(\"gray.200\", \"gray.900\")\n      }}\n      _activeLink={{\n        color: useColorModeValue(\"blue.500\", \"blue.200\")\n      }}\n      onClick={() => props.onClose()}\n      to={props.path}\n    >\n      {props.name}\n    </Link>\n  );\n};\n\nexport default function TopNav() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const menuProps = {\n    bg: useColorModeValue(\"gray.200\", \"gray.900\"),\n    color: useColorModeValue(\"blue.500\", \"blue.200\")\n  };\n\n  return (\n    <>\n      <Box bg={useColorModeValue(\"white\", \"gray.700\")} px={4} boxShadow={\"lg\"}>\n        <Flex\n          h={16}\n          alignItems={\"center\"}\n          justifyContent={\"space-between\"}\n          w={[\"90%\", \"85%\", \"80%\"]}\n          maxW={800}\n          mx=\"auto\"\n        >\n          <IconButton\n            size={\"md\"}\n            icon={isOpen ? <AiOutlineClose /> : <GiHamburgerMenu />}\n            aria-label={\"Open Menu\"}\n            display={[\"inherit\", \"inherit\", \"none\"]}\n            onClick={isOpen ? onClose : onOpen}\n          />\n          <HStack spacing={8} alignItems={\"center\"}>\n            <Box>\n              <Avatar\n                as={Link}\n                size={\"sm\"}\n                href={\"/portfolio\"}\n                src={UserIcon}\n                // src={\"https://avatars2.githubusercontent.com/u/37842853?v=4\"}\n              />\n            </Box>\n            <HStack\n              as={\"nav\"}\n              spacing={4}\n              display={{ base: \"none\", md: \"flex\" }}\n            >\n              {webLinks.map((link, index) => (\n                <NavLink\n                  key={index}\n                  name={link.name}\n                  path={link.path}\n                  onClose={onClose}\n                />\n              ))}\n              <Menu isLazy>\n                <MenuButton\n                  as={Button}\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  px={2}\n                  py={1.5}\n                  fontSize={\"1em\"}\n                  rounded={\"md\"}\n                  height={\"auto \"}\n                  _hover={menuProps}\n                  _expanded={menuProps}\n                  _focus={{ boxShadow: \"outline\" }}\n                  rightIcon={<BiChevronDown size={18} />}\n                >\n                  Links\n                </MenuButton>\n                <MenuList zIndex={5}>\n                  <Link as={RouterNavLink} to=\"/tech-stack\">\n                    <MenuItem>\n                      <HStack>\n                        <Icon\n                          as={AiTwotoneThunderbolt}\n                          size={18}\n                          color={useColorModeValue(\"blue.500\", \"blue.200\")}\n                        />\n                        <Text>Tech Stack</Text>\n                      </HStack>\n                    </MenuItem>\n                  </Link>\n                  <Link as={RouterNavLink} to=\"/story-timeline\">\n                    <MenuItem>\n                      <HStack>\n                        <Icon\n                          as={MdTimeline}\n                          size={18}\n                          color={useColorModeValue(\"blue.500\", \"blue.200\")}\n                        />\n                        <Text>Developer Story</Text>\n                      </HStack>\n                    </MenuItem>\n                  </Link>\n                  <Link as={RouterNavLink} to=\"/achievements\">\n                    <MenuItem>\n                      <HStack>\n                        <Icon\n                          as={BsCheckCircle}\n                          size={18}\n                          color={useColorModeValue(\"blue.500\", \"blue.200\")}\n                        />\n                        <Text>Achievements</Text>\n                      </HStack>\n                    </MenuItem>\n                  </Link>\n                </MenuList>\n              </Menu>\n            </HStack>\n          </HStack>\n          <Flex alignItems={\"center\"}>\n            <IconButton\n              as={Link}\n              href={\"https://github.com/santiagotonoli\"}\n              size={\"md\"}\n              icon={<FaGithub />}\n              aria-label={\"Github account\"}\n              bg={useColorModeValue(\"white\", \"gray.700\")}\n              _hover={{\n                textDecoration: \"none\",\n                bg: useColorModeValue(\"gray.200\", \"gray.900\")\n              }}\n            />\n            <ColorModeSwitcher justifySelf=\"flex-end\" />\n          </Flex>\n        </Flex>\n\n        {isOpen ? (\n          <Box\n            pb={4}\n            w={[\"100%\", \"100%\", \"80%\"]}\n            maxW={800}\n            display={[\"inherit\", \"inherit\", \"none\"]}\n          >\n            <Stack as={\"nav\"} spacing={4}>\n              {mobileLinks.map((link, index) => (\n                <NavLink\n                  index={index}\n                  name={link.name}\n                  path={link.path}\n                  onClose={onClose}\n                />\n              ))}\n            </Stack>\n          </Box>\n        ) : null}\n      </Box>\n    </>\n  );\n}\n","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/footer.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/Navigation.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/my-story.tsx",["180","181","182","183","184","185","186"],"import * as React from \"react\";\nimport {\n  Text,\n  VStack,\n  Heading,\n  Box,\n  Image,\n  HStack,\n  Divider,\n  IconButton\n} from \"@chakra-ui/react\";\nimport { StoryTimeline } from \"./story-timeline\";\nimport { FaGraduationCap, FaAward, FaMedal } from \"react-icons/fa\";\nimport { BsFillBriefcaseFill } from \"react-icons/bs\";\nimport placeholder from \"assets/images/placeholder.png\";\nimport { companies, institutes, story } from \"data/data\";\nimport Header from \"./header\";\nimport Section from \"./section\";\nimport { PageSlideFade } from \"./page-transitions\";\n\nconst MyStory = () => {\n\n\n\n  return (\n    <VStack>\n      <Section mb={14}>\n        <PageSlideFade>\n          <VStack>\n            <Header mt={0} mb={1}>\n              My developer journey\n            </Header>\n            {/* <Text\n              fontSize={\"xl\"}\n              color={useColorModeValue(\"gray.500\", \"gray.200\")}\n              maxW=\"lg\"\n              textAlign=\"center\"\n            >\n              This page tells you my story in timeline shape.\n            </Text> */}\n          </VStack>\n        </PageSlideFade>\n      </Section>\n      <VStack textAlign=\"start\" align=\"flex-start\" mb={0}>\n        <Box>\n          {story.map((institutes, index) => (\n            \n            <StoryTimeline\n              icon={institutes.icon}\n              index={index}\n            >\n              {\" \"}\n              <HStack>\n                <Image\n                  rounded=\"full\"\n                  w={[6, 8]}\n                  h={[6, 8]}\n                  objectFit=\"cover\"\n                  fallbackSrc={placeholder}\n                  src={institutes.logo}\n                  alt={institutes.alt}\n                />\n                <VStack align=\"start\">\n                  <Heading\n                    fontSize={[12, 13, 15]}\n                    lineHeight=\"shorter\"\n                    fontWeight=\"bold\"\n                  >\n                    <Box>{institutes.title}</Box>\n                    <Box mt={1}>{institutes.period}</Box>\n                  </Heading>\n                </VStack>\n              </HStack>\n              <Divider my={2} />\n              <Text fontSize={[12, 13, 15]}>{institutes.role}</Text>\n            </StoryTimeline>\n          ))}\n        </Box>\n      </VStack>\n    </VStack>\n  );\n};\n\nexport default MyStory;\n","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/achievements.tsx",["187","188","189","190","191","192"],"import * as React from \"react\";\nimport {\n  FiPackage,\n  FiHome,\n  FiEdit2,\n  FiUsers,\n  FiBarChart2,\n  FiGlobe,\n} from \"react-icons/fi\";\nimport {\n  FaGraduationCap,\n  FaMobile\n} from \"react-icons/fa\";\nimport { VStack, Heading, Box, Link, LinkProps } from \"@chakra-ui/react\";\nimport { TimelineItem } from \"./Timeline\";\nimport { PageSlideFade } from \"./page-transitions\";\nimport { Link as NavLink } from \"react-router-dom\";\nimport Header from \"./header\";\n\ninterface ExternalLinkProps extends LinkProps {\n  url: string;\n  linkProps?: LinkProps;\n  text: string;\n}\n\nconst ExternalLink: React.FC<ExternalLinkProps> = ({\n  url,\n  linkProps,\n  text,\n  ...props\n}) => {\n  return (\n    <Link href={url} {...linkProps} {...props}>\n      {text}\n    </Link>\n  );\n};\n\nconst InternalLink: React.FC<ExternalLinkProps> = ({\n  url,\n  linkProps,\n  text,\n  ...props\n}) => {\n  return (\n    <Link as={NavLink} to={url} {...linkProps} {...props}>\n      {text}\n    </Link>\n  );\n};\nconst Achievements = () => {\n  return (\n    <PageSlideFade>\n      <Box align=\"start\" mb={6}>\n        <Header mt={0} mb={0}>\n          Achievements\n        </Header>\n      </Box>\n      <VStack textAlign=\"start\" align=\"start\" mb={5}>\n        <Box>\n          <Heading fontSize=\"2xl\" fontWeight=\"600\" my={5}>\n            2022\n          </Heading>\n          <Box>\n            <TimelineItem icon={FiGlobe}>Created my portfolio website based on an github open source project</TimelineItem>\n            <TimelineItem icon={FaGraduationCap}>\n              Graduated from La Capsule 🚀 {\" \"}\n            </TimelineItem>\n            <TimelineItem icon={FaMobile}>\n            Developed my first React native App{\" \"}\n            </TimelineItem>\n            <TimelineItem icon={FiBarChart2} >\n              Learned how to code in JavaScript{\" \"}\n            </TimelineItem>\n            \n          </Box>\n        </Box>\n        <Box>\n          <Heading fontSize=\"2xl\" fontWeight=\"600\" my={5}>\n            2021\n          </Heading>\n          <Box>\n            <TimelineItem icon={FaGraduationCap} skipTrail>\n              Graduated from Paris Dauphine University 🐬 {\" \"}\n            </TimelineItem>\n          </Box>\n        </Box>\n      </VStack>\n    </PageSlideFade>\n  );\n};\n\nexport default Achievements;\n","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/tech-stack.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/home.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/blog/notebook-app/notebook-post.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/repositories-list.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/blog/posts.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/about.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/configs/site-config.js",["193","194","195"],"import React from \"react\";\nimport {\n  FaGithub,\n  FaDev,\n  FaLinkedin,\n  FaQuora,\n  FaTwitter\n} from \"react-icons/fa\";\nimport { FiMail } from \"react-icons/fi\";\n\nconst siteConfig = {\n  copyright: `Copyright © ${new Date().getFullYear()} Santiago Tonoli de Maussion. All Rights Reserved.`,\n  author: {\n    name: \"Santiago Tonoli de Maussion\",\n    accounts: [\n      {\n        url: \"https://github.com/santiagotonoli\",\n        label: \"Github Account\",\n        type: \"gray\",\n        icon: <FaGithub />\n      },\n      {\n        url: \"https://www.linkedin.com/in/santiago-tonoli-355429173/\",\n        label: \"LinkedIn Account\",\n        type: \"linkedin\",\n        icon: <FaLinkedin />\n      },\n      {\n        url: \"mailto:stonolidm@gmail.com\",\n        label: \"Mail santiago\",\n        type: \"gray\",\n        icon: <FiMail />\n      }\n    ]\n  }\n};\n\nexport default siteConfig;\n","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/page-transitions.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/header.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/motion.tsx",["196"],"import {\n  Box,\n  Flex,\n  Image,\n  Skeleton,\n  forwardRef,\n} from \"@chakra-ui/react\";\nimport { motion, isValidMotionProp } from \"framer-motion\";\nimport placeholder from \"assets/images/placeholder.png\";\n\nexport const MotionBox = motion.custom(\n  forwardRef((props, ref) => {\n    const chakraProps = Object.fromEntries(\n      // do not pass framer props to DOM element\n      Object.entries(props).filter(([key]) => !isValidMotionProp(key))\n    );\n    return <Box ref={ref} {...chakraProps} />;\n  })\n);\nexport const MotionFlex = motion.custom(\n  forwardRef((props, ref) => {\n    const chakraProps = Object.fromEntries(\n      // do not pass framer props to DOM element\n      Object.entries(props).filter(([key]) => !isValidMotionProp(key))\n    );\n    return <Flex ref={ref} {...chakraProps} />;\n  })\n);\n\nexport const MotionImage = motion.custom(\n  forwardRef((props, ref) => {\n    const chakraProps = Object.fromEntries(\n      // do not pass framer props to DOM element\n      Object.entries(props).filter(([key]) => !isValidMotionProp(key))\n    );\n    return (\n        <Image\n          ref={ref}\n          fallbackSrc={placeholder}\n          {...chakraProps}\n        />\n    );\n  })\n);\n","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/projects.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/skill-card.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/ColorModeSwitcher.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/data/projects-list.ts",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/data/data.ts",["197","198"],"import SfrLogo from \"assets/images/logos/sfr.svg.png\";\nimport onWave from \"assets/images/logos/onWave.png\";\nimport Dauphine from \"assets/images/logos/Dauphine.jpeg\";\nimport Capsule from \"assets/images/logos/capsule.png\";\nimport piscine from \"assets/images/logos/42.png\";\nimport figma from \"assets/images/skills/figma.png\";\nimport vscode from \"assets/images/skills/vscode.png\";\nimport react from \"assets/images/skills/react.png\";\nimport mongo from \"assets/images/skills/mongo.png\";\nimport vba from \"assets/images/skills/vba.png\";\nimport notion from \"assets/images/skills/notion.png\";\nimport redux from \"assets/images/skills/redux.png\";\nimport javascript from \"assets/images/skills/javascript.png\";\nimport html5 from \"assets/images/skills/html-5.png\";\nimport css3 from \"assets/images/skills/css3.png\";\n\nimport bootstrap from \"assets/images/skills/bootstrap.png\";\nimport heroku from \"assets/images/skills/heroku.png\";\nimport docean from \"assets/images/skills/digital-ocean.png\";\nimport { BiCapsule } from \"react-icons/bi\";\nimport { FaGraduationCap, FaAward, FaMedal } from \"react-icons/fa\";\nimport { BsFillBriefcaseFill } from \"react-icons/bs\";\n\n\nexport const companies = [\n  {\n    title: \"SFR - Groupe Altice\",\n    alt: \"Sfr image\",\n    role: \"Data analyst - Project Manager\",\n    skills: [\"VBA\", \"Tableau Software\", \"Management\", \"Intern Softwares\"],\n    period: \"2 years / 2019 - 2021\",\n    logo: SfrLogo,\n  },\n  {\n    title: \"onWave\",\n    alt: \"onWave image\",\n    role: \"Co-Founder - Product Owner\",\n    skills: [\"Figma\", \"UX/UI\", \"Entrepreneurship\", \"JavaScript\", \"React Native\", \"Notion\"],\n    period: \"10 months / 2020 - 2021\",\n    logo: onWave\n  }\n];\n\nexport const institutes = [\n  {\n    short_title: \"La Capsule\",\n    title: \"La Capsule - Coding Bootcamp\",\n    alt: \"capsule image\",\n    role: \"Full-Stack Web and mobile Developement\",\n    skills: [\"JavaScript\", \"React\", \"React Native\", \"Node.js\", \"Express\", \"MongoDB\", \"HTML\", \"CSS\", \"Bootstrap\", \"Git\", \"Github\", \"Heroku\"],\n    period: \"2022\",\n    startingYear: \"2022\",\n    logo: Capsule,\n  },\n  {\n    short_title: \"Dauphine\",\n    title: \"Université Paris Dauphine\",\n    alt: \"Dauphine image\",\n    role: \"Master's degree in digital economy and innovation\",\n    skills: [\"Project Management\", \"Data Science\", \"Python\", \"R\", \"Marketing\", \"Digital Economy\", \"Innovation\"],\n    period: \"2019 - 2021\",\n    startingYear: \"2019\",\n    logo: Dauphine,\n    awards: [\n      {\n        title: \"Start-up Challenge\",\n        description:\n          \"Won the 2nd price in the Start-up Challenge of the Dauphine University with the project 'DeepClimb App - AI for Climbing'\",\n        date: \"February, 2020\"\n      }\n    ]\n  },\n  {\n    short_title: \"Ecole 42\",\n    title: \" Piscine Ecole 42\",\n    alt: \"capsule image\",\n    role: \"Candidat to the 42 piscine - First coding experience\",\n    skills: [\"C\", \"Algorithmique\"],\n    period: \"2019\",\n    startingYear: \"2019\",\n    logo: piscine,\n  }\n];\n\nexport const story = [\n  {\n    short_title: \"Ecole 42\",\n    type: \"school\",\n    title: \" Piscine Ecole 42\",\n    alt: \"capsule image\",\n    role: \"Candidat to the 42 piscine - First coding experience\",\n    skills: [\"C\", \"Algorithmique\"],\n    period: \"August 2019\",\n    startingYear: \"2019\",\n    logo: piscine,\n    icon: FaGraduationCap\n  },\n  {\n    short_title: \"Dauphine\",\n    type: \"school\",\n    title: \"Université Paris Dauphine\",\n    alt: \"Dauphine image\",\n    role: \"Started my Master's degree in digital economy and innovation\",\n    skills: [\"Project Management\", \"Data Science\", \"Python\", \"R\", \"Marketing\", \"Digital Economy\", \"Innovation\"],\n    period: \"September 2019\",\n    startingYear: \"2019\",\n    logo: Dauphine,\n    icon: FaGraduationCap\n  },\n  {\n    title: \"SFR - Groupe Altice\",\n    type: \"company\",\n    alt: \"Sfr image\",\n    role: \"Became Data analyst - Project Manager at SFR\",\n    skills: [\"VBA\", \"Tableau Software\", \"Management\", \"Intern Softwares\"],\n    period: \"December 2019\",\n    logo: SfrLogo,\n    icon: BsFillBriefcaseFill\n  },\n  {\n    title: \"Start-up Challenge\",\n    type: \"award\",\n    role:\n          \"Won the 2nd price in the Start-up Challenge of the Dauphine University with the project 'DeepClimb App - AI for Climbing'\",\n    skills: [\"VBA\", \"Tableau Software\", \"Management\", \"Intern Softwares\"],\n    period: \"February 2020\",\n    logo: Dauphine,\n    icon: FaAward\n  },\n  \n  {\n    title: \"onWave\",\n    type: \"company\",\n    alt: \"onWave image\",\n    role: \"Started an entrepreneurial project - a social audio app named onWave\",\n    skills: [\"Figma\", \"UX/UI\", \"Entrepreneurship\", \"JavaScript\", \"React Native\", \"Notion\"],\n    period: \"April 2021\",\n    logo: onWave,\n    icon: BsFillBriefcaseFill\n  },\n  {\n    short_title: \"La Capsule\",\n    type: \"school\",\n    title: \"La Capsule - Coding Bootcamp\",\n    alt: \"capsule image\",\n    role: \"Got admitted and started the La Capsule - Coding Bootcamp. Full-Stack Web and mobile Developement\",\n    skills: [\"JavaScript\", \"React\", \"React Native\", \"Node.js\", \"Express\", \"MongoDB\", \"HTML\", \"CSS\", \"Bootstrap\", \"Git\", \"Github\", \"Heroku\"],\n    period: \"March 2022\",\n    startingYear: \"2022\",\n    logo: Capsule,\n    icon: FaGraduationCap\n  },\n  {\n    short_title: \"La Capsule\",\n    type: \"award\",\n    title: \"La Capsule - Coding Bootcamp\",\n    alt: \"capsule image\",\n    role: \"Created my first mobile app from scratch - Finded - App for finding  any kind of services near your location\",\n    skills: [\"JavaScript\", \"React\", \"React Native\", \"Node.js\", \"Express\", \"MongoDB\", \"HTML\", \"CSS\", \"Bootstrap\", \"Git\", \"Github\", \"Heroku\"],\n    period: \"May 2022\",\n    startingYear: \"2022\",\n    logo: Capsule,\n    icon: FaAward\n  }\n];\n\nexport const skills = [\n  {\n    name: \"JavaScript\",\n    description: \"Web development\",\n    link: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript\",\n    type: \"development\",\n    image: javascript\n  },\n  {\n    name: \"React Native\",\n    description: \"Mobile development\",\n    link: \"https://reactnative.dev/\",\n    type: \"development\",\n    image: react\n  },\n  {\n    name: \"React\",\n    description: \"Web development\",\n    link: \"https://reactjs.org/\",\n    type: \"development\",\n    image: react\n  },\n  {\n    name: \"Html5\",\n    description: \"Web layouts\",\n    link: \"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5\",\n    type: \"development\",\n    image: html5\n  },\n  {\n    name: \"Css3\",\n    description: \"Web design\",\n    link: \"https://developer.mozilla.org/en-US/docs/Web/CSS\",\n    type: \"design\",\n    image: css3\n  },\n  {\n    name: \"Redux\",\n    description: \"Development\",\n    link: \"https://redux.js.org/\",\n    type: \"development\",\n    image: redux\n  },\n  {\n    name: \"Bootstrap\",\n    description: \"Web design\",\n    link: \"https://getbootstrap.com/\",\n    type: \"design\",\n    image: bootstrap\n  },\n  {\n    name: \"MongoDB\",\n    description: \"Database\",\n    link: \"https://www.mongodb.com/\",\n    type: \"database\",\n    image: mongo\n  },\n  {\n    name: \"Heroku\",\n    description: \"Devops\",\n    link: \"https://www.heroku.com/\",\n    type: \"devops\",\n    image: heroku\n  },\n  {\n    name: \"Visual Studio Code\",\n    description: \"Code editor of choice\",\n    link: \"https://code.visualstudio.com/\",\n    type: \"development\",\n    image: vscode\n  },\n  {\n    name: \"Figma\",\n    description: \"Collaborative Design\",\n    link: \"https://www.figma.com/\",\n    type: \"design\",\n    image: figma\n  },\n  {\n    name: \"VBA\",\n    description: \"Automation\",\n    link: \"https://docs.microsoft.com/fr-fr/office/vba/api/overview/\",\n    type: \"automation\",\n    image: vba\n  },\n  {\n    name: \"Notion\",\n    description: \"Project management\",\n    link: \"https://www.notion.so/\",\n    type: \"project-management\",\n    image: notion\n  },\n  {\n    name: \"Discord\",\n    description: \"Communication\",\n    link: \"https://discord.com/\",\n    type: \"communication\",\n    image: docean\n  }\n];\n","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/data/posts/articles.ts",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/underlined-text.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/blog/carousel.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/project-card.tsx",["199","200"],"import * as React from \"react\";\nimport {\n  HStack,\n  VStack,\n  Text,\n  useColorModeValue,\n  Tag,\n  Link,\n  Box,\n  Image\n} from \"@chakra-ui/react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { getTagColor } from \"style/theme\";\nimport LazyImage from \"./lazy-image\";\n\ninterface ProjectCardProps {\n  title: string;\n  description: string[];\n  logo: string;\n  blurHash: string;\n  link: string;\n  technologies: string[];\n  images: string[];\n}\n\nconst ProjectCard: React.FC<ProjectCardProps> = ({\n  title,\n  description,\n  logo,\n  blurHash,\n  link,\n  technologies,\n  images\n}) => {\n  const textColor = useColorModeValue(\"gray.500\", \"gray.200\");\n  const [isOpen, setIsOpen] = React.useState(false);\n  const toggleOpen = () => setIsOpen(!isOpen);\n\n  return (\n    <motion.div layout onClick={toggleOpen}>\n      <HStack\n        p={4}\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        rounded=\"xl\"\n        borderWidth=\"1px\"\n        borderColor={useColorModeValue(\"gray.100\", \"gray.700\")}\n        w=\"100%\"\n        h=\"100%\"\n        textAlign=\"left\"\n        align=\"start\"\n        spacing={4}\n        cursor=\"pointer\"\n        _hover={{ shadow: \"lg\" }}\n      >\n        <LazyImage\n          src={logo}\n          blurHash={blurHash}\n          size=\"sm\"\n          width={33}\n          height={33}\n          layout=\"fixed\"\n          rounded=\"md\"\n        />\n        <VStack align=\"start\" justify=\"flex-start\">\n          <VStack spacing={0} align=\"start\">\n            <motion.div layout>\n              <HStack>\n                <Text\n                  as={Link}\n                  href={link}\n                  fontWeight=\"bold\"\n                  fontSize=\"md\"\n                  noOfLines={1}\n                  onClick={e => e.stopPropagation()}\n                  isExternal\n                >\n                  {title}\n                </Text>\n                <HStack spacing=\"1\">\n                  {technologies.map(tech => (\n                    <Tag size=\"sm\" colorScheme={getTagColor(tech)}>\n                      {tech}\n                    </Tag>\n                  ))}\n                </HStack>\n              </HStack>\n            </motion.div>\n            <AnimatePresence>\n              <motion.div\n                layout\n                initial={{ opacity: 1 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 1 }}\n              >\n                {!isOpen && (\n                  \n                  <Text fontSize=\"sm\" color={textColor} noOfLines={{ base: 2 }}>\n                    {description[0]}\n                  </Text>\n                )}\n              </motion.div>\n            </AnimatePresence>\n\n            <AnimatePresence>\n              <motion.div\n                layout\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                variants={{ exit: { transition: { staggerChildren: 0.1 } } }}\n              >\n                {isOpen && \n\n                 description.map(desc => (\n                   desc === \"Achievements:\" ? (\n                  <Text fontSize=\"sm\" color={textColor} marginTop=\"5\" fontWeight={\"bold\"}>\n                    {desc}\n                  </Text>):<Text fontSize=\"sm\" color={textColor} marginTop=\"2\">\n                    {desc}\n                  </Text>\n                ))}\n                \n              </motion.div>\n            </AnimatePresence>\n          </VStack>\n        </VStack>\n      </HStack>\n    </motion.div>\n  );\n};\n\nexport default ProjectCard;\n","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/data/posts/notebook-app/images.ts",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/lazy-image.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/blog/post-card.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/live-data.tsx",["201","202","203"],"import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport useFetch from \"use-http\";\nimport { SimpleGrid, Box, useMediaQuery } from \"@chakra-ui/react\";\nimport { PageSlideFade } from \"./page-transitions\";\nimport RepositoryCard from \"./live-data-card\";\nimport StackGrid from \"react-stack-grid\";\nimport CardSkeleton from \"./card-skeleton\";\n\nconst LiveData = () => {\n  const { get, loading, error, data } = useFetch(\"https://api.github.com\");\n  const [repos, setRepos] = useState([]);\n  const [isLargerThan720] = useMediaQuery(\"(min-width: 720px)\");\n  const [isLargerThan982] = useMediaQuery(\"(min-width: 982px)\");\n\n  let columnWidth = 390;\n  if (isLargerThan982) {\n    columnWidth = 390;\n  } else {\n    if (isLargerThan720) {\n      columnWidth = 300;\n    } else {\n      columnWidth = \"100%\";\n    }\n  }\n\n  useEffect(() => {\n    get(\"/users/MA-Ahmad/repos\").then(res => {\n      setRepos(\n        res?.sort((a, b) => b.stargazers_count - a.stargazers_count).slice(0, 8)\n      );\n    });\n  }, []);\n\n  return (\n    <PageSlideFade>\n      {loading ? (\n        <SimpleGrid columns={[1, 1, 2]} spacing={4} mt={4}>\n          <CardSkeleton />\n        </SimpleGrid>\n      ) : (\n        <Box mt={4}>\n          <StackGrid columnWidth={columnWidth}>\n            {repos?.map((repo, index) => (\n              <RepositoryCard\n                title={repo.name}\n                description={repo.description}\n                language={repo.language}\n                url={repo.svn_url}\n                created_at={repo.created_at}\n                stargazers_count={repo.stargazers_count}\n                forks_count={repo.forks_count}\n              />\n            ))}\n          </StackGrid>\n        </Box>\n      )}\n    </PageSlideFade>\n  );\n};\n\nexport default LiveData;\n","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/offline-data.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/section.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/Timeline.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/story-timeline.tsx",["204"],"import React from \"react\";\nimport {\n  Box,\n  BoxProps,\n  Circle,\n  Flex,\n  useColorModeValue,\n  Popover,\n  PopoverTrigger,\n  PopoverArrow,\n  PopoverContent,\n  PopoverBody\n} from \"@chakra-ui/react\";\nimport { FiCheckCircle } from \"react-icons/fi\";\n\nexport interface StoryTimelineProps extends BoxProps {\n  icon?: any;\n  boxProps?: BoxProps;\n  skipTrail?: boolean;\n  index: number;\n  year?: string;\n}\n\nexport const StoryTimeline: React.FC<StoryTimelineProps> = ({\n  icon = \"\",\n  boxProps = {},\n  index,\n  year,\n  skipTrail = false,\n  children,\n  ...props\n}) => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const open = () => setIsOpen(!isOpen);\n  const close = () => setIsOpen(false);\n  const color = useColorModeValue(\"gray.700\", \"gray.200\");\n  let place = index % 2 === 0 ? \"right\" : \"left\";\n\n  return (\n    <Flex minH={20} {...props}>\n      <Flex flexDir=\"column\" alignItems={\"center\"} minHeight={\"8rem\"} mr={4}>\n        <Popover\n          returnFocusOnClose={false}\n          isOpen={isOpen}\n          onClose={close}\n          placement={place}\n          closeOnBlur={false}\n          // variant=\"responsive\"\n          width={[\"9.3rem\", \"13rem\", \"15rem\", \"100%\"]}\n        >\n          <PopoverTrigger>\n            <Box onClick={open} position=\"relative\">\n              <Circle\n                size={12}\n                bg={useColorModeValue(\"gray.600\", \"gray.500\")}\n                opacity={useColorModeValue(0.07, 0.15)}\n                sx={{}}\n              />\n              {year ? (\n                <Box\n                  fontSize={15}\n                  fontWeight={\"bold\"}\n                  color={color}\n                  pos=\"absolute\"\n                  left=\"0.5rem\"\n                  top=\"0.875rem\"\n                >\n                  {year}\n                </Box>\n              ) : (\n                <Box\n                  as={icon}\n                  size=\"1.25rem\"\n                  color={color}\n                  pos=\"absolute\"\n                  left=\"0.875rem\"\n                  top=\"0.875rem\"\n                />\n              )}\n            </Box>\n          </PopoverTrigger>\n          <Box fontSize={15}>\n            {!year && (\n              <PopoverContent padding={[\"0.2rem\", \"0.2rem\", \"0.7rem\"]}>\n                <PopoverArrow />\n                {/* <PopoverCloseButton /> */}\n                <PopoverBody>\n                  <Box overflow=\"scroll\">{children}</Box>\n                </PopoverBody>\n              </PopoverContent>\n            )}\n          </Box>\n        </Popover>\n        {!skipTrail && <Box w=\"1px\" flex={1} bg={color} />}\n      </Flex>\n    </Flex>\n  );\n};\n","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/live-data-card.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/card-skeleton.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/container.tsx",[],"/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/components/offline-data-card.tsx",["205","206","207","208","209"],"import * as React from \"react\";\nimport {\n  Box,\n  Image,\n  useColorModeValue,\n  VStack,\n  Text,\n  AspectRatio,\n  HStack,\n  Tag,\n  Icon,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  Center,\n  Flex,\n  Tooltip\n} from \"@chakra-ui/react\";\nimport { MotionBox } from \"./motion\";\nimport { getTagColor } from \"style/theme\";\nimport { AiOutlineStar, AiOutlineShareAlt } from \"react-icons/ai\";\nimport { FiGithub } from \"react-icons/fi\";\nimport { CardTransition } from \"./page-transitions\";\nimport LazyImage from \"./lazy-image\";\ninterface RepositoryCardProps {\n  key: number;\n  title: string;\n  description: string;\n  cover: string;\n  blurHash: string;\n  technologies: string[];\n  url: string;\n  live: string;\n  stars: string;\n  fork: string;\n  created: string;\n}\nconst RepositoryCard = (props: RepositoryCardProps) => {\n  const {\n    key,\n    title,\n    description,\n    cover,\n    blurHash,\n    technologies,\n    url,\n    live,\n    stars,\n    fork,\n  } = props;\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handleClick = () => {\n    onOpen();\n    // window.open(link);\n    // if (type == \"link\" || type == \"article\") {\n    //   window.open(link);\n    // } else {\n    //   onOpen();\n    // }\n  };\n\n  const handleLinkClick = (\n    e: React.MouseEvent<HTMLParagraphElement, MouseEvent>,\n    link: string\n  ) => {\n    window.open(link);\n    e.stopPropagation();\n  };\n\n  const transition = { duration: 0.5, ease: [0.43, 0.13, 0.23, 0.96] };\n\n  const thumbnailVariants = {\n    initial: { scale: 0.9, opacity: 0 },\n    enter: { scale: 1, opacity: 1, transition },\n    exit: {\n      scale: 0.5,\n      opacity: 0,\n      transition: { duration: 1.5, ...transition }\n    }\n  };\n\n  const imageVariants = {\n    hover: { scale: 1.1 }\n  };\n\n  return (\n    <CardTransition>\n      <Box onClick={handleClick} cursor=\"pointer\" size=\"xl\">\n        <VStack\n          //   w=\"100%\"\n          rounded=\"xl\"\n          borderWidth=\"1px\"\n          bg={useColorModeValue(\"white\", \"gray.800\")}\n          borderColor={useColorModeValue(\"gray.100\", \"gray.700\")}\n          _hover={{\n            shadow: \"lg\",\n            textDecoration: \"none\"\n          }}\n          overflow=\"hidden\"\n          align=\"start\"\n          spacing={0}\n        >\n          <Box position=\"relative\" w=\"100%\">\n            <MotionBox variants={thumbnailVariants}>\n              <MotionBox\n                whileHover=\"hover\"\n                variants={imageVariants}\n                transition={transition}\n              >\n                <AspectRatio\n                  ratio={1.85 / 1}\n                  maxW=\"400px\"\n                  w=\"100%\"\n                  borderBottomWidth=\"1px\"\n                  borderColor={useColorModeValue(\"gray.100\", \"gray.700\")}\n                >\n                  {/* <Image\n                    src={cover}\n                    fallback={<Skeleton />}\n                    objectFit=\"cover\"\n                  /> */}\n                  <LazyImage\n                    src={cover}\n                    blurHash={blurHash}\n                  />\n                </AspectRatio>\n              </MotionBox>\n            </MotionBox>\n          </Box>\n\n          <VStack py={2} px={[2, 4]} spacing={1} align=\"start\" w=\"100%\">\n            <Flex justifyContent={\"space-between\"} width=\"100%\">\n              <Tooltip hasArrow label=\"Github link\" placement=\"top\">\n                <HStack>\n                  <Icon as={FiGithub} boxSize=\"0.9em\" mt={\"1px\"} />\n                  {/* <Link href={url} isExternal> */}\n                  <Text\n                    fontSize=\"sm\"\n                    noOfLines={1}\n                    fontWeight=\"600\"\n                    align=\"left\"\n                    onClick={e => handleLinkClick(e, url)}\n                  >\n                    {title}\n                  </Text>\n                </HStack>\n              </Tooltip>\n              {/* </Link> */}\n              <Flex>\n                <Icon as={AiOutlineStar} boxSize=\"0.9em\" mt={\"1px\"} />\n                <Box as=\"span\" ml=\"1\" fontSize=\"sm\">\n                  {stars}\n                </Box>\n              </Flex>\n            </Flex>\n            <Flex justifyContent={\"space-between\"} width=\"100%\">\n              <Box>\n                <HStack spacing=\"1\">\n                  {technologies.map(tech => (\n                    <Tag size=\"sm\" colorScheme={getTagColor(tech)}>\n                      <Text fontSize={[\"0.55rem\", \"inherit\", \"inherit\"]}>\n                        {tech}\n                      </Text>\n                    </Tag>\n                  ))}\n                </HStack>\n              </Box>\n            </Flex>\n            {/* <Flex justifyContent={\"space-between\"} width=\"100%\">\n              <Flex>\n                <AiOutlineStar color=\"teal.300\" />\n                <Box as=\"span\" ml=\"1\" fontSize=\"sm\">\n                  {stars}\n                </Box>\n              </Flex>\n              <Box >\n              <Text\n                fontSize=\"xs\"\n                fontWeight=\"400\"\n                color={useColorModeValue(\"gray.400\", \"gray.500\")}\n              >\n                {created}\n              </Text>\n            </Box>\n            </Flex> */}\n          </VStack>\n        </VStack>\n        <Modal isOpen={isOpen} onClose={onClose} isCentered allowPinchZoom>\n          <ModalOverlay />\n          <ModalContent bg=\"none\" maxW={\"28rem\"} w=\"auto\">\n            <ModalBody p={0} rounded=\"lg\" overflow=\"hidden\" bg=\"none\">\n              <Center>\n                <Image src={cover} rounded=\"lg\" />\n                {/* {type == \"image\" ? (\n                <Image src={cover} rounded=\"lg\" />\n              ) : (\n                <ReactPlayer url={link} controls playing />\n              )} */}\n              </Center>\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n      </Box>\n    </CardTransition>\n  );\n};\n\nexport default RepositoryCard;\n","/Users/santiagotonoli/Desktop/portfolio/React-TypeScript-Portfolio/src/data/repositories.ts",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":30,"column":10,"nodeType":"216","messageId":"217","endLine":30,"endColumn":16},{"ruleId":"214","severity":1,"message":"218","line":10,"column":3,"nodeType":"216","messageId":"217","endLine":10,"endColumn":13},{"ruleId":"214","severity":1,"message":"219","line":13,"column":10,"nodeType":"216","messageId":"217","endLine":13,"endColumn":25},{"ruleId":"214","severity":1,"message":"220","line":13,"column":27,"nodeType":"216","messageId":"217","endLine":13,"endColumn":34},{"ruleId":"214","severity":1,"message":"221","line":13,"column":36,"nodeType":"216","messageId":"217","endLine":13,"endColumn":43},{"ruleId":"214","severity":1,"message":"222","line":14,"column":10,"nodeType":"216","messageId":"217","endLine":14,"endColumn":29},{"ruleId":"214","severity":1,"message":"223","line":16,"column":10,"nodeType":"216","messageId":"217","endLine":16,"endColumn":19},{"ruleId":"214","severity":1,"message":"224","line":16,"column":21,"nodeType":"216","messageId":"217","endLine":16,"endColumn":31},{"ruleId":"214","severity":1,"message":"225","line":3,"column":3,"nodeType":"216","messageId":"217","endLine":3,"endColumn":12},{"ruleId":"214","severity":1,"message":"226","line":4,"column":3,"nodeType":"216","messageId":"217","endLine":4,"endColumn":9},{"ruleId":"214","severity":1,"message":"227","line":5,"column":3,"nodeType":"216","messageId":"217","endLine":5,"endColumn":10},{"ruleId":"214","severity":1,"message":"228","line":6,"column":3,"nodeType":"216","messageId":"217","endLine":6,"endColumn":10},{"ruleId":"214","severity":1,"message":"229","line":26,"column":7,"nodeType":"216","messageId":"217","endLine":26,"endColumn":48},{"ruleId":"214","severity":1,"message":"230","line":39,"column":7,"nodeType":"216","messageId":"217","endLine":39,"endColumn":48},{"ruleId":"231","severity":1,"message":"232","line":4,"column":3,"nodeType":"216","messageId":"217","endLine":4,"endColumn":8},{"ruleId":"231","severity":1,"message":"233","line":6,"column":3,"nodeType":"216","messageId":"217","endLine":6,"endColumn":10},{"ruleId":"231","severity":1,"message":"234","line":7,"column":3,"nodeType":"216","messageId":"217","endLine":7,"endColumn":12},{"ruleId":"214","severity":1,"message":"235","line":5,"column":3,"nodeType":"216","messageId":"217","endLine":5,"endColumn":11},{"ruleId":"214","severity":1,"message":"236","line":20,"column":10,"nodeType":"216","messageId":"217","endLine":20,"endColumn":19},{"ruleId":"214","severity":1,"message":"221","line":21,"column":36,"nodeType":"216","messageId":"217","endLine":21,"endColumn":43},{"ruleId":"214","severity":1,"message":"237","line":9,"column":3,"nodeType":"216","messageId":"217","endLine":9,"endColumn":6},{"ruleId":"214","severity":1,"message":"238","line":10,"column":3,"nodeType":"216","messageId":"217","endLine":10,"endColumn":8},{"ruleId":"214","severity":1,"message":"239","line":11,"column":25,"nodeType":"216","messageId":"217","endLine":11,"endColumn":30},{"ruleId":"214","severity":1,"message":"240","line":11,"column":32,"nodeType":"216","messageId":"217","endLine":11,"endColumn":36},{"ruleId":"241","severity":1,"message":"242","line":33,"column":6,"nodeType":"243","endLine":33,"endColumn":8,"suggestions":"244"},{"ruleId":"214","severity":1,"message":"245","line":14,"column":10,"nodeType":"216","messageId":"217","endLine":14,"endColumn":23},{"ruleId":"214","severity":1,"message":"246","line":23,"column":25,"nodeType":"216","messageId":"217","endLine":23,"endColumn":42},{"ruleId":"214","severity":1,"message":"247","line":42,"column":5,"nodeType":"216","messageId":"217","endLine":42,"endColumn":8},{"ruleId":"214","severity":1,"message":"248","line":44,"column":5,"nodeType":"216","messageId":"217","endLine":44,"endColumn":16},{"ruleId":"214","severity":1,"message":"249","line":49,"column":5,"nodeType":"216","messageId":"217","endLine":49,"endColumn":9},{"ruleId":"214","severity":1,"message":"250","line":51,"column":5,"nodeType":"216","messageId":"217","endLine":51,"endColumn":9},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"@typescript-eslint/no-unused-vars","'BsBook' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'FaGraduationCap' is defined but never used.","'FaAward' is defined but never used.","'FaMedal' is defined but never used.","'BsFillBriefcaseFill' is defined but never used.","'companies' is defined but never used.","'institutes' is defined but never used.","'FiPackage' is defined but never used.","'FiHome' is defined but never used.","'FiEdit2' is defined but never used.","'FiUsers' is defined but never used.","'ExternalLink' is assigned a value but never used.","'InternalLink' is assigned a value but never used.","no-unused-vars","'FaDev' is defined but never used.","'FaQuora' is defined but never used.","'FaTwitter' is defined but never used.","'Skeleton' is defined but never used.","'BiCapsule' is defined but never used.","'Box' is defined but never used.","'Image' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array.","ArrayExpression",["253"],"'FiCheckCircle' is defined but never used.","'AiOutlineShareAlt' is defined but never used.","'key' is assigned a value but never used.","'description' is assigned a value but never used.","'live' is assigned a value but never used.","'fork' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},"Update the dependencies array to be: [get]",{"range":"256","text":"257"},[1011,1013],"[get]"]